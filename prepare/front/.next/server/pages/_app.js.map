{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./pages/_app.js","webpack:///external \"redux-saga\"","webpack:///./sagas/post.js","webpack:///./sagas/user.js","webpack:///./sagas/index.js","webpack:///./reducers/index.js","webpack:///./store/configureStore.js","webpack:///external \"react/jsx-runtime\"","webpack:///external \"next-redux-wrapper\"","webpack:///./reducers/user.js","webpack:///external \"redux-saga/effects\"","webpack:///external \"immer\"","webpack:///external \"react\"","webpack:///./util/produce.js","webpack:///./reducers/post.js","webpack:///external \"redux\"","webpack:///external \"redux-devtools-extension\"","webpack:///external \"next/head\"","webpack:///external \"axios\""],"names":["initialState","removeFollowerLoading","removeFollowerDone","removeFollowerError","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","loadUserLoading","loadUserDone","loadUserError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","loadFollowersLoading","loadFollowersDone","loadFollowersError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginAction","data","dispatch","getState","state","loginRequestAction","axios","post","then","res","loginSuccessAction","catch","err","loginFailureAction","type","logoutRequestAction","reducer","action","produce","draft","Followers","filter","v","id","UserId","error","Followings","userInfo","push","console","log","nickname","Posts","unshift","args","enableES5","mainPosts","singlePost","imagePaths","hasMorePosts","uploadImagesLoading","uploadImagesDone","uploadImagesError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","retweetLoading","retweetDone","retweetError","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","addPost","addComment","i","find","PostId","Likers","concat","length","Comments"],"mappings":"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","file":"pages/_app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport 'antd/dist/antd.css';\nimport React from 'react';\nimport Head from 'next/head';\nimport wrapper from '../store/configureStore';\n\nconst NodeBird = ({\n  Component\n}) => {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"meta\", {\n        charSet: \"utf-8\"\n      }), /*#__PURE__*/_jsx(\"title\", {\n        children: \"NodeBird\"\n      })]\n    }), /*#__PURE__*/_jsx(Component, {})]\n  });\n};\n\nexport default wrapper.withRedux(NodeBird);","module.exports = require(\"redux-saga\");","import { all, delay, fork, put, takeLatest, call, throttle } from \"redux-saga/effects\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\nimport axios from 'axios';\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    console.log('saga post');\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: RETWEET_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    console.log('saga post');\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    console.log('saga post');\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    console.log('saga post');\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`); // lastId가 null이면 0으로\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    console.log('saga post');\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`); // lastId가 null이면 0으로\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    console.log('saga post');\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`); // lastId가 null이면 0으로\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n    console.log('saga post');\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`); // lastId가 null이면 0으로\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n    console.log('saga post');\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    console.log('saga post');\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    console.log('saga post');\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLoadUserPosts() {\n  yield throttle(5000, LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield throttle(5000, LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchRetweet), fork(watchUploadImages), fork(watchLikePost), fork(watchUnlikePost), fork(watchAddPost), fork(watchLoadPost), fork(watchLoadPosts), fork(watchLoadUserPosts), fork(watchLoadHashtagPosts), fork(watchRemovePost), fork(watchAddComment)]);\n}","import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\nimport axios from 'axios';\n\nfunction removeFollowerAPI(data) {\n  return axios.delete(`/user/follower/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    console.log('saga removeFollower');\n    const result = yield call(removeFollowerAPI, action.data);\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get('/user/followers', data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    console.log('saga loadFollowers');\n    const result = yield call(loadFollowersAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.get('/user/followings', data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    console.log('saga loadFollowings');\n    const result = yield call(loadFollowingsAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    console.log('saga changeNickname');\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    console.log('saga loadMyInfo');\n    const result = yield call(loadMyInfoAPI); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n    // npm i passport passport-local 로그인를 다루는 미들웨어\n\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  } // 성공결과는 result.data\n  // 실패결과는 err.response.data\n  // put은 디스패치라 생각하면 좋다\n\n}\n\nfunction loadUserAPI(data) {\n  return axios.get(`/user/${data}`);\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    console.log('saga follow');\n    const result = yield call(followAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    console.log('saga unfollow');\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log('saga logIn');\n    const result = yield call(logInAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n    // npm i passport passport-local 로그인를 다루는 미들웨어\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  } // 성공결과는 result.data\n  // 실패결과는 err.response.data\n  // put은 디스패치라 생각하면 좋다\n\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data); //작동순서 프론트 pages의 onSubmit에 데이터(아이디, 닉네임, 비밀번호)가\n    //SIGNUPREQ 를 통해 리덕스랑 사가 실행, 데이터 함수는 action으로가\n    //signUpAPI의 데이터로 이동 url을 통해 전송\n\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n} // yield take('LOG_IN_REQUEST');은 LOG_IN_REQUEST이 실행될때까지 기다리겠다.\n\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchRemoveFollower), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}\n;","import { all, fork } from 'redux-saga/effects';\nimport axios from 'axios';\nimport postSaga from './post';\nimport userSaga from './user';\naxios.defaults.baseURL = 'http://localhost:3065'; //sagas 의 post url를 등록\n\naxios.defaults.withCredentials = true; //쿠기 전달 허용 이제 saga에 공통적으로 적용된다.\n\nexport default function* rootSaga() {\n  yield all([//all은 함수를 동시에 실행시킴\n  fork(postSaga), fork(userSaga) // fork는 비동기 함수를 실행하는 것\n  // 요청을 보내버리고 결과를 기다리지 않고 다음 것이 실행됨\n  // call은 동기 함수를 실행하는 것\n  // 결과를 기다렸다 다음 것이 실행됨. \n  ]);\n} // generate 함수 function*\n// const gen = function*(){\n// console.log(1);\n// yield;\n// console.log(2);\n// yield;   \n//}\n//\n// const generator = gen();\n// generator.next()  generate함수를 실행시키려면 next()필요\n// console.log(1)실행. 다시 generator 함수를 실행하면\n// console.log(2)실행 generate는 yield가 나오는 곳에서 멈춤\n// 중단점이 있는 함수. 이것이 saga\n// done: true가 나오면 멈춤\n//\n// generate 함수로 무한 표현하기\n// let i = 0;\n// const gen = function* () {\n//     while (true) {\n//         yield i++;\n//     }\n// }\n// const g= gen();\n// g.next();","import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux'; // combineReducer은 리듀서끼리 합치게 해준다.\n\nimport user from './user';\nimport post from './post'; //(이전상태, 액션) => 다음상태\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return action.payload;\n\n    default:\n      {\n        const combinedReducer = combineReducers({\n          user,\n          post\n        }); //combinedReducer user와 post가 합친 리듀서 생성\n\n        return combinedReducer(state, action);\n      }\n  }\n}; // const rootReducer = combineReducers({\n//     index: (state = {}, action) => {\n//         switch (action.type) {\n//             case HYDRATE:\n//                 console.log('HYDRATE', action);\n//                 return {\n//                     ...state,\n//                     ...action.payload,\n//                 };\n//             // HYDRATE를 위해 인덕스 리듀션을 추가\n//             default: return state;\n//             // default: return state;를 안적으면 리턴값이 undifined가 뜬다.\n//         }\n//     },\n//     user,\n//     post,\n// });\n\n\nexport default rootReducer;","import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport reducer from '../reducers';\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = true ? compose(applyMiddleware(...middlewares)) //배포용\n  : composeWithDevTools(applyMiddleware(...middlewares)); //개발용\n\n  const store = createStore(reducer, enhancer); //enhancer 미들웨어 액션기록을 보기위해 사용\n  //redux-devtools-extension\n\n  store.sagaTask = sagaMiddleware.run(rootSaga); //sagaTask 서바사이드 렌더링을 하기위해 필요\n\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE === 'development'\n});\nexport default wrapper;","module.exports = require(\"react/jsx-runtime\");","module.exports = require(\"next-redux-wrapper\");","import produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n    removeFollowerLoading: false, //팔로워 차단 가져오기\r\n    removeFollowerDone: false,\r\n    removeFollowerError: null,\r\n    loadMyInfoLoading: false, //유저정보 가져오기\r\n    loadMyInfoDone: false,\r\n    loadMyInfoError: null,\r\n    loadUserLoading: false, // 유저 정보 가져오기 시도중\r\n    loadUserDone: false,\r\n    loadUserError: null,\r\n    followLoading: false, // 팔로우 시도중\r\n    followDone: false,  // 팔로우 유무\r\n    followError: null,\r\n    unfollowLoading: false, // 언팔로우 시도중\r\n    unfollowDone: false,  // 언팔로우 유무\r\n    unfollowError: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,  // 로그인 유무\r\n    logInError: null,\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false, // 로그아웃 유무\r\n    logOutError: null,\r\n    signUpLoading: false, // 회원가입 시도중\r\n    signUpDone: false,  //\r\n    signUpError: null, //\r\n    loadFollowersLoading: false, // 팔로워 표시 시도중\r\n    loadFollowersDone: false,  //\r\n    loadFollowersError: null, //\r\n    loadFollowingsLoading: false, // 팔로잉 표시 시도중\r\n    loadFollowingsDone: false,  //\r\n    loadFollowingsError: null, //\r\n    changeNicknameLoading: false, //닉네임 변경 시도중\r\n    changeNicknameDone: false,  //\r\n    changeNicknameError: null, //\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nexport const loginAction = (data) => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        dispatch(loginRequestAction());\r\n        axios.post('/api/login')\r\n            .then((res) => {\r\n                dispatch(loginSuccessAction(res.data));\r\n            })\r\n            .catch((err) => {\r\n                dispatch(loginFailureAction(err));\r\n            })\r\n    }\r\n\r\n}\r\n\r\n//액션 생성기\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type: LOG_IN_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logoutRequestAction = (data) => {\r\n    return {\r\n        type: LOG_OUT_REQUEST,\r\n        //로그아웃은 데이터가 필요없다.\r\n    }\r\n}\r\n\r\n// const dummyUser = (data) => ({\r\n//     ...data,\r\n//     nickname: '쩡운',\r\n//     id: 1,\r\n//     Posts: [{ id: 1 }],\r\n//     Followings: [{ nickname: '오징어' }, { nickname: '명태' }, { nickname: '강아지' }],\r\n//     Followers: [{ nickname: '오징어' }, { nickname: '명태' }, { nickname: '강아지' }],\r\n// });\r\n\r\n// reducer은 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(불변성을 지키면서)\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case REMOVE_FOLLOWER_REQUEST:\r\n            draft.removeFollowerLoading = true;\r\n            draft.removeFollowerDone = false;\r\n            draft.removeFollowerError = null;\r\n            break;\r\n        case REMOVE_FOLLOWER_SUCCESS:\r\n            draft.removeFollowerLoading = false;\r\n            draft.removeFollowerDone = true;\r\n            draft.me.Followers = draft.me.Followers.filter((v) => v.id !== action.data.UserId);\r\n        case REMOVE_FOLLOWER_FAILURE:\r\n            draft.removeFollowerLoading = false;\r\n            draft.removeFollowerError = action.data.error;\r\n            break;\r\n\r\n        case LOAD_FOLLOWERS_REQUEST:\r\n            draft.loadFollowersLoading = true;\r\n            draft.loadFollowersDone = false;\r\n            draft.loadFollowersError = null;\r\n            break;\r\n        case LOAD_FOLLOWERS_SUCCESS:\r\n            draft.loadFollowersLoading = false;\r\n            draft.loadFollowersDone = true;\r\n            draft.me.Followers = action.data;\r\n        case LOAD_FOLLOWERS_FAILURE:\r\n            draft.loadFollowersLoading = false;\r\n            draft.loadFollowersError = action.data.error;\r\n            break;\r\n        \r\n        case LOAD_FOLLOWINGS_REQUEST:\r\n            draft.loadFollowingsLoading = true;\r\n            draft.loadFollowingsDone = false;\r\n            draft.loadFollowingsError = null;\r\n            break;\r\n        case LOAD_FOLLOWINGS_SUCCESS:\r\n            draft.loadFollowingsLoading = false;\r\n            draft.loadFollowingsDone = true;\r\n            draft.me.Followings = action.data;\r\n            break;\r\n        case LOAD_FOLLOWINGS_FAILURE:\r\n            draft.loadFollowingsLoading = false;\r\n            draft.loadFollowingsError = action.data.error;\r\n            break;\r\n\r\n        case LOAD_MY_INFO_REQUEST:\r\n            draft.loadMyInfoLoading = true;\r\n            draft.loadMyInfoDone = false;\r\n            draft.loadMyInfoError = null;\r\n            break;\r\n        case LOAD_MY_INFO_SUCCESS:\r\n            draft.loadMyInfoLoading = false;\r\n            draft.loadMyInfoDone = true;\r\n            draft.me = action.data;\r\n            break;\r\n        case LOAD_MY_INFO_FAILURE:\r\n            draft.loadMyInfoLoading = false;\r\n            draft.loadMyInfoError = action.data.error;\r\n            break;\r\n\r\n        case LOAD_USER_REQUEST:\r\n            draft.loadUserLoading = true;\r\n            draft.loadUserError = null;\r\n            draft.loadUserDone = false;\r\n            break;\r\n        case LOAD_USER_SUCCESS:\r\n            draft.loadUserLoading = false;\r\n            draft.userInfo = action.data;\r\n            draft.loadUserDone = true;\r\n            break;\r\n        case LOAD_USER_FAILURE:\r\n            draft.loadUserLoading = false;\r\n            draft.loadUserError = action.error;\r\n            break; \r\n\r\n        case FOLLOW_REQUEST:\r\n            draft.followLoading = true;\r\n            draft.followDone = false;\r\n            draft.followError = null;\r\n            break;\r\n        case FOLLOW_SUCCESS:\r\n            draft.followLoading = false;\r\n            draft.followDone = true;\r\n            draft.me.Followings.push({ id: action.data.UserId });\r\n            break;\r\n        case FOLLOW_FAILURE:\r\n            draft.followLoading = false;\r\n            draft.followError = action.error;\r\n            break;\r\n        case UNFOLLOW_REQUEST:\r\n            draft.unfollowLoading = true;\r\n            draft.unfollowDone = false;\r\n            draft.unfollowError = null;\r\n            break;\r\n            \r\n        case UNFOLLOW_SUCCESS:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowDone = true;\r\n            draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId);\r\n            break;\r\n        case UNFOLLOW_FAILURE:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowError = action.error;\r\n            break;\r\n\r\n        case LOG_IN_REQUEST:\r\n            console.log('reducer logIn');\r\n            draft.logInLoading = true;\r\n            draft.logInDone = false;\r\n            draft.logInError = null;\r\n            break;\r\n        case LOG_IN_SUCCESS:\r\n            draft.logInLoading = false;\r\n            draft.logInDone = true;\r\n            draft.me = action.data;\r\n            break;\r\n        case LOG_IN_FAILURE:\r\n            draft.logInLoading = false;\r\n            draft.logInError = action.error;\r\n            break;\r\n\r\n        case LOG_OUT_REQUEST:\r\n            draft.logOutLoading = true;\r\n            draft.logOutDone = false;\r\n            draft.logOutError = null;\r\n            break;\r\n        case LOG_OUT_SUCCESS:\r\n            draft.logOutLoading = false;\r\n            draft.logOutDone = true;\r\n            draft.me = null;\r\n            break;\r\n        case LOG_OUT_FAILURE:\r\n            draft.logOutLoading = false;\r\n            draft.logOutError = action.error;\r\n            break;\r\n\r\n        case SIGN_UP_REQUEST:\r\n            draft.signUpLoading = true;\r\n            draft.signUpDone = false;\r\n            draft.signUpError = null;\r\n            break;\r\n        case SIGN_UP_SUCCESS:\r\n            draft.signUpLoading = false;\r\n            draft.signUpDone = true;\r\n            break;\r\n        case SIGN_UP_FAILURE:\r\n            draft.signUpLoading = false;\r\n            draft.signUpError = action.error;\r\n            break;\r\n\r\n        case CHANGE_NICKNAME_REQUEST:\r\n            draft.changeNicknameLoading = true;\r\n            draft.changeNicknameDone = false;\r\n            draft.changeNicknameError = null;\r\n            break;\r\n        case CHANGE_NICKNAME_SUCCESS:\r\n            draft.me.nickname = action.data.nickname;\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameDone = true;\r\n            break;\r\n        case CHANGE_NICKNAME_FAILURE:\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameError = action.error;\r\n            break;\r\n        case ADD_POST_TO_ME:\r\n            draft.me.Posts.unshift({ id: action.data });\r\n            break;\r\n        // immer를 사용하면 위에 처럼 줄일 수 있다.\r\n        // return {\r\n        //     ...state,\r\n        //     me: {\r\n        //         ...state.me,\r\n        //         Posts: [{ id: action.data }, ...state.me.Posts],\r\n        //     },\r\n        // };\r\n        case REMOVE_POST_OF_ME:\r\n            draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n            break;\r\n        // immer를 사용하면 위에 처럼 줄일 수 있다.\r\n        // return {\r\n        //     ...state,\r\n        //     me: {\r\n        //         ...state.me,\r\n        //         Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n        //     },\r\n        // };\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\n\r\nexport default reducer;","module.exports = require(\"redux-saga/effects\");","module.exports = require(\"immer\");","module.exports = require(\"react\");","import {produce, enableES5} from 'immer';\r\n\r\nexport default (...args) =>{\r\n    enableES5();\r\n    return produce(...args);\r\n};","import produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n    mainPosts: [\r\n        // {\r\n        //     id: 1,\r\n        //     User: {\r\n        //         id: 1,\r\n        //         nickname: '이정운',\r\n        //     },\r\n        //     content: '첫 번째 게시글 #해시태크 #익스프레스',\r\n        //     Images: [{\r\n        //         id: shortId.generate(),\r\n        //         src: 'https://3.bp.blogspot.com/-paIvI6xdE2k/WovHemFi6jI/AAAAAAACN20/6hBeNS_XVO0idJlKvTR_hKhDsaob7pdOgCLcBGAs/s1600/3.gif',\r\n        //     }, {\r\n        //         id: shortId.generate(),\r\n        //         src: 'https://coinpan.com/files/attach/images/198/013/866/096/b5a203116c9ff0d11a13d9bb43f7bb39.gif',\r\n        //     }, {\r\n        //         id: shortId.generate(),\r\n        //         src: 'http://t1.daumcdn.net/thumb/R1024x0/?fname=http://cfile271.uf.daum.net/image/276DCA3C5586B77E26FDB2',\r\n        //     }],\r\n        //     Comments: [{\r\n        //         id: shortId.generate(),\r\n        //         User: {\r\n        //             id: shortId.generate(),\r\n        //             nickname: '쩡운'\r\n        //         },\r\n        //         content: '호호호호',\r\n        //     }, {\r\n        //         id: shortId.generate(),\r\n        //         User: {\r\n        //             id: shortId.generate(),\r\n        //             nickname: '쩡훈',\r\n        //         },\r\n        //         content: '헝헝헝헝',\r\n        //     }],\r\n        // }\r\n    ],\r\n    singlePost: [],\r\n    imagePaths: [],\r\n    // imagePaths는 이미지 업로드할때 생기는 경로가 저장\r\n    hasMorePosts: true,\r\n    uploadImagesLoading: false,\r\n    uploadImagesDone: false,\r\n    uploadImagesError: null,\r\n    likePostLoading: false,\r\n    likePostDone: false,\r\n    likePostError: null,\r\n    unlikePostLoading: false,\r\n    unlikePostDone: false,\r\n    unlikePostError: null,\r\n    loadPostLoading: false,\r\n    loadPostDone: false,\r\n    loadPostError: null,\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n    retweetLoading: false,\r\n    retweetDone: false,\r\n    retweetError: null,\r\n};\r\n\r\n// 이제 안씀\r\n// export const generateDumyPost = (number) => Array(number).fill().map(() => ({\r\n//     id: shortId.generate(),\r\n//     User: {\r\n//         id: shortId.generate(),\r\n//         nickname: faker.name.findName(),\r\n//         //faker 랜덤 닉네임 \r\n//     },\r\n//     content: faker.lorem.paragraph(),\r\n//     //faker 랜덤 문단\r\n//     Images: [{\r\n//         src: faker.image.image(),\r\n//     }],\r\n//     Comments: [{\r\n//         User: {\r\n//             id: shortId.generate(),\r\n//             nickname: faker.name.findName(),\r\n//             //faker 랜덤 닉네임 \r\n//         },\r\n//         content: faker.lorem.sentence(),\r\n//         //faker 랜덤 문장\r\n//     }],\r\n// }));\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const addPost = (data) => ({\r\n    type: ADD_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\n// 이제 안쓴다.\r\n// const dummyPost = (data) => ({\r\n//     id: data.id,\r\n//     content: data.content,\r\n//     User: {\r\n//         id: 1,\r\n//         nickname: '이정운',\r\n//     },\r\n//     Images: [],\r\n//     Comments: [],\r\n// });\r\n\r\n// const dummyComment = (data) => ({\r\n//     id: shortId.generate(),\r\n//     content: data,\r\n//     User: {\r\n//         id: 1,\r\n//         nickname: '이정운',\r\n//     },\r\n// });\r\n\r\n\r\n// reducer은 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(불변성을 지키면서)\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case RETWEET_REQUEST:\r\n            console.log('reducer post');\r\n            draft.retweetLoading = true;\r\n            draft.retweetDone = false;\r\n            draft.retweetError = null;\r\n            break;\r\n        case RETWEET_SUCCESS:{\r\n            draft.retweetLoading = false;\r\n            draft.retweetDone = true;\r\n            draft.mainPosts.unshift(action.data);\r\n            break;\r\n        }\r\n        case RETWEET_FAILURE:\r\n            draft.retweetLoading = false;\r\n            draft.retweetError = action.error;\r\n            break;\r\n        \r\n        case REMOVE_IMAGE:\r\n            draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n        break;\r\n\r\n        case UPLOAD_IMAGES_REQUEST:\r\n            console.log('reducer post');\r\n            draft.uploadImagesLoading = true;\r\n            draft.uploadImagesDone = false;\r\n            draft.uploadImagesError = null;\r\n            break;\r\n        case UPLOAD_IMAGES_SUCCESS:{\r\n            draft.imagePaths = action.data;\r\n            draft.uploadImagesLoading = false;\r\n            draft.uploadImagesDone = true;\r\n            break;\r\n        }\r\n        case UPLOAD_IMAGES_FAILURE:\r\n            draft.uploadImagesLoading = false;\r\n            draft.uploadImagesError = action.error;\r\n            break;\r\n\r\n        case LIKE_POST_REQUEST:\r\n            console.log('reducer post');\r\n            draft.likePostLoading = true;\r\n            draft.likePostDone = false;\r\n            draft.likePostError = null;\r\n            break;\r\n        case LIKE_POST_SUCCESS:{\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            post.Likers.push({id: action.data.UserId});\r\n            draft.likePostLoading = false;\r\n            draft.likePostDone = true;\r\n            break;\r\n        }\r\n        case LIKE_POST_FAILURE:\r\n            draft.likePostLoading = false;\r\n            draft.likePostError = action.error;\r\n            break;\r\n        \r\n        case UNLIKE_POST_REQUEST:\r\n            console.log('reducer post');\r\n            draft.unlikePostLoading = true;\r\n            draft.unlikePostDone = false;\r\n            draft.unlikePostError = null;\r\n            break;\r\n        case UNLIKE_POST_SUCCESS:{\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            post.Likers=post.Likers.filter((v)=>v.id !== action.data.UserId);\r\n            draft.unlikePostLoading = false;\r\n            draft.unlikePostDone = true;\r\n            break;\r\n        }\r\n        case UNLIKE_POST_FAILURE:\r\n            draft.unlikePostLoading = false;\r\n            draft.unlikePostError = action.error;\r\n            break;\r\n        \r\n        case LOAD_POST_REQUEST:\r\n            console.log('reducer post');\r\n            draft.loadPostLoading = true;\r\n            draft.loadPostDone = false;\r\n            draft.loadPostError = null;\r\n            break;\r\n        case LOAD_POST_SUCCESS:\r\n            draft.mainPosts = draft.mainPosts.concat(action.data);\r\n            //concat 합치기\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostDone = true;\r\n            draft.singlePost = action.data;\r\n            //singlePost 하나만 저장할때\r\n            break;\r\n        case LOAD_POST_FAILURE:\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostError = action.error;\r\n            break;    \r\n            \r\n        //액션을 동시에 사용할 수 있는 경우는\r\n        //한페이지에서 이 액션을 같이 사용하는게 아니라면 가능\r\n        case LOAD_USER_POSTS_REQUEST:\r\n        case LOAD_HASHTAG_POSTS_REQUEST:\r\n        case LOAD_POSTS_REQUEST:\r\n            console.log('reducer post');\r\n            draft.loadPostsLoading = true;\r\n            draft.loadPostsDone = false;\r\n            draft.loadPostsError = null;\r\n            break;\r\n        case LOAD_USER_POSTS_SUCCESS:\r\n        case LOAD_HASHTAG_POSTS_SUCCESS:\r\n        case LOAD_POSTS_SUCCESS:\r\n            draft.mainPosts = draft.mainPosts.concat(action.data);\r\n            //concat 합치기\r\n            draft.loadPostsLoading = false;\r\n            draft.loadPostsDone = true;\r\n            draft.hasMorePosts = draft.mainPosts.length === 10;\r\n            break;\r\n        case LOAD_USER_POSTS_FAILURE:\r\n        case LOAD_HASHTAG_POSTS_FAILURE:\r\n        case LOAD_POSTS_FAILURE:\r\n            draft.loadPostsLoading = false;\r\n            draft.loadPostsError = action.error;\r\n            break;\r\n\r\n        case ADD_POST_REQUEST:\r\n            console.log('reducer post');\r\n            draft.addPostLoading = true;\r\n            draft.addPostDone = false;\r\n            draft.addPostError = null;\r\n            break;\r\n        case ADD_POST_SUCCESS:\r\n            draft.mainPosts.unshift(action.data);\r\n            draft.addPostLoading = false;\r\n            draft.addPostDone = true;\r\n            draft.imagePaths = [];\r\n            //업로드 후 이미지패스 초기화\r\n            break;\r\n        case ADD_POST_FAILURE:\r\n            draft.addPostLoading = false;\r\n            draft.addPostError = action.error;\r\n            break;\r\n\r\n        case REMOVE_POST_REQUEST:\r\n            console.log('reducer post');\r\n            draft.removePostLoading = true;\r\n            draft.removePostDone = false;\r\n            draft.removePostError = null;\r\n            break;\r\n        case REMOVE_POST_SUCCESS:\r\n            draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n            //불변성을 안지키는 거면 draft(immer)을 안쓰는것이 좋다.\r\n            draft.removePostLoading = false;\r\n            draft.removePostDone = true;\r\n            break;\r\n        case REMOVE_POST_FAILURE:\r\n            draft.removePostLoading = false;\r\n            draft.removePostError = action.error;\r\n            break;\r\n\r\n        case ADD_COMMENT_REQUEST:\r\n            draft.addCommentLoading = true;\r\n            draft.addCommentDone = false;\r\n            draft.addCommentError = null;\r\n            break;\r\n        case ADD_COMMENT_SUCCESS: {\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            post.Comments.unshift(action.data);\r\n            draft.addCommentLoading = false;\r\n            draft.addCommentDone = true;\r\n            break;\r\n            // immer 쓰면 이것이 위에 처럼 간단해진다.\r\n            // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n            // const post = { ...state.mainPosts[postIndex] };\r\n            // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n            // const mainPosts = [...state.mainPosts];\r\n            // mainPosts[postIndex] = post;\r\n            // return {\r\n            //     ...state,\r\n            //     mainPosts,\r\n            //     addCommentLoading: false,\r\n            //     addCommentDone: true,\r\n            // };\r\n        };\r\n        case ADD_COMMENT_FAILURE:\r\n            draft.addCommentLoading = false;\r\n            draft.addCommentError = action.error;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n});\r\n\r\n\r\n\r\nexport default reducer;","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"next/head\");","module.exports = require(\"axios\");"],"sourceRoot":""}