{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./pages/_app.js","webpack:///external \"redux-saga\"","webpack:///./sagas/post.js","webpack:///./sagas/user.js","webpack:///./sagas/index.js","webpack:///./reducers/index.js","webpack:///./store/configureStore.js","webpack:///external \"react/jsx-runtime\"","webpack:///external \"next-redux-wrapper\"","webpack:///./reducers/user.js","webpack:///./config/config.js","webpack:///external \"redux-saga/effects\"","webpack:///external \"immer\"","webpack:///external \"react\"","webpack:///./util/produce.js","webpack:///./reducers/post.js","webpack:///external \"redux\"","webpack:///external \"redux-devtools-extension\"","webpack:///external \"next/head\"","webpack:///external \"axios\""],"names":["NodeBird","Component","wrapper","withRedux","retweetAPI","data","axios","post","retweet","action","result","call","console","log","put","type","RETWEET_SUCCESS","err","error","RETWEET_FAILURE","response","uploadImagesAPI","uploadImages","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","likePostAPI","patch","likePost","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","unlikePostAPI","delete","unlikePost","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","loadPostAPI","get","loadPost","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","loadPostsAPI","lastId","loadPosts","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","loadUserPostsAPI","loadUserPosts","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","loadHashtagPostsAPI","encodeURIComponent","loadHashtagPosts","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","addPostAPI","addPost","ADD_POST_SUCCESS","ADD_POST_TO_ME","id","ADD_POST_FAILURE","updatePostAPI","PostId","updatePost","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","removePostAPI","removePost","REMOVE_POST_SUCCESS","REMOVE_POST_OF_ME","REMOVE_POST_FAILURE","addCommentAPI","postId","addComment","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","watchRetweet","takeLatest","RETWEET_REQUEST","watchUploadImages","UPLOAD_IMAGES_REQUEST","watchLikePost","LIKE_POST_REQUEST","watchUnlikePost","UNLIKE_POST_REQUEST","watchLoadPosts","throttle","LOAD_POSTS_REQUEST","watchLoadPost","LOAD_POST_REQUEST","watchLoadUserPosts","LOAD_USER_POSTS_REQUEST","watchLoadHashtagPosts","LOAD_HASHTAG_POSTS_REQUEST","watchAddPost","ADD_POST_REQUEST","watchUpdatePost","UPDATE_POST_REQUEST","watchRemovePost","REMOVE_POST_REQUEST","watchAddComment","ADD_COMMENT_REQUEST","postSaga","all","fork","defaults","baseURL","backUrl","withCredentials","rootSaga","userSaga","initialState","removeFollowerLoading","removeFollowerDone","removeFollowerError","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","loadUserLoading","loadUserDone","loadUserError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","loadFollowersLoading","loadFollowersDone","loadFollowersError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","loginAction","dispatch","getState","state","loginRequestAction","then","res","loginSuccessAction","catch","loginFailureAction","logoutRequestAction","reducer","produce","draft","Followers","filter","v","UserId","Followings","userInfo","push","nickname","Posts","unshift","args","enableES5","mainPosts","singlePost","imagePaths","hasMorePosts","uploadImagesLoading","uploadImagesDone","uploadImagesError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","updatePostLoading","updatePostDone","updatePostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","retweetLoading","retweetDone","retweetError","REMOVE_IMAGE","i","concat","find","Likers","length","content","Comments"],"mappings":"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","file":"pages/_app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import 'antd/dist/antd.css'\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Head from 'next/head';\r\n\r\nimport wrapper from '../store/configureStore';\r\nconst NodeBird = ({ Component }) => {\r\n    return (\r\n        <>\r\n            <Head>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>NodeBird</title>\r\n            </Head>\r\n            <Component />\r\n        </>\r\n    );\r\n};\r\n\r\nNodeBird.propTypes = {\r\n    Component: PropTypes.elementType.isRequired,\r\n};\r\n\r\nexport default wrapper.withRedux(NodeBird);","module.exports = require(\"redux-saga\");","import { all, delay, fork, put, takeLatest ,call, throttle} from \"redux-saga/effects\";\r\nimport {\r\n    ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS,\r\n    ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS,\r\n    LIKE_POST_FAILURE,\r\n    LIKE_POST_REQUEST,\r\n    LIKE_POST_SUCCESS,\r\n    LOAD_HASHTAG_POSTS_FAILURE,\r\n    LOAD_HASHTAG_POSTS_REQUEST,\r\n    LOAD_HASHTAG_POSTS_SUCCESS,\r\n    LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS,\r\n    LOAD_POST_FAILURE,\r\n    LOAD_POST_REQUEST,\r\n    LOAD_POST_SUCCESS,\r\n    LOAD_USER_POSTS_FAILURE,\r\n    LOAD_USER_POSTS_REQUEST,\r\n    LOAD_USER_POSTS_SUCCESS,\r\n    REMOVE_POST_FAILURE, REMOVE_POST_REQUEST,\r\n    REMOVE_POST_SUCCESS,\r\n    RETWEET_FAILURE,\r\n    RETWEET_REQUEST,\r\n    RETWEET_SUCCESS,\r\n    UNLIKE_POST_FAILURE,\r\n    UNLIKE_POST_REQUEST,\r\n    UNLIKE_POST_SUCCESS,\r\n    UPDATE_POST_FAILURE,\r\n    UPDATE_POST_REQUEST,\r\n    UPDATE_POST_SUCCESS,\r\n    UPLOAD_IMAGES_FAILURE,\r\n    UPLOAD_IMAGES_REQUEST,\r\n    UPLOAD_IMAGES_SUCCESS,\r\n} from \"../reducers/post\";\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\r\nimport axios from 'axios';\r\n\r\nfunction retweetAPI(data) {\r\n    return axios.post(`/post/${data}/retweet`);\r\n}\r\n\r\n\r\nfunction* retweet(action) {\r\n    try {\r\n        const result = yield call(retweetAPI, action.data);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: RETWEET_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: RETWEET_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction uploadImagesAPI(data) {\r\n    return axios.post('/post/images',data);\r\n}\r\n\r\n\r\nfunction* uploadImages(action) {\r\n    try {\r\n        const result = yield call(uploadImagesAPI, action.data);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: UPLOAD_IMAGES_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UPLOAD_IMAGES_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n    return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\n\r\nfunction* likePost(action) {\r\n    try {\r\n        const result = yield call(likePostAPI, action.data);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: LIKE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LIKE_POST_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n    return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n    try {\r\n        const result = yield call(unlikePostAPI, action.data);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: UNLIKE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNLIKE_POST_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadPostAPI(data) {\r\n    return axios.get(`/post/${data}`);\r\n    // lastId가 null이면 0으로\r\n}\r\n\r\nfunction* loadPost(action) {\r\n    try {\r\n        const result = yield call(loadPostAPI, action.data);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: LOAD_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_POST_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadPostsAPI(lastId) {\r\n    return axios.get(`/posts?lastId=${lastId || 0}`);\r\n    // lastId가 null이면 0으로\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n    try {\r\n        const result = yield call(loadPostsAPI, action.lastId);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: LOAD_POSTS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_POSTS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadUserPostsAPI(data, lastId) {\r\n    return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\r\n    // lastId가 null이면 0으로\r\n}\r\n\r\nfunction* loadUserPosts(action) {\r\n    try {\r\n        const result = yield call(loadUserPostsAPI, action.data, action.lastId);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: LOAD_USER_POSTS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_USER_POSTS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadHashtagPostsAPI(data, lastId) {\r\n    return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\r\n    // lastId가 null이면 0으로\r\n}\r\n\r\nfunction* loadHashtagPosts(action) {\r\n    try {\r\n        const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: LOAD_HASHTAG_POSTS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_HASHTAG_POSTS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/post', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        const result = yield call(addPostAPI, action.data);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n        yield put({\r\n            type: ADD_POST_TO_ME,\r\n            data: result.data.id,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction updatePostAPI(data) {\r\n    return axios.patch(`/post/${data.PostId}`, data);\r\n}\r\n\r\nfunction* updatePost(action) {\r\n    try {\r\n        const result = yield call(updatePostAPI, action.data);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: UPDATE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: UPDATE_POST_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n    return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action) {\r\n    try {\r\n        const result = yield call(removePostAPI, action.data);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: REMOVE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n        yield put({\r\n            type: REMOVE_POST_OF_ME,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: REMOVE_POST_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        const result = yield call(addCommentAPI, action.data);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchRetweet() {\r\n    yield takeLatest(RETWEET_REQUEST, retweet);\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n    yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\n\r\nfunction* watchLikePost() {\r\n    yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\n\r\nfunction* watchUnlikePost() {\r\n    yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n    yield throttle(5000,LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\n\r\nfunction* watchLoadPost() {\r\n    yield takeLatest(LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\nfunction* watchLoadUserPosts() {\r\n    yield throttle(5000,LOAD_USER_POSTS_REQUEST, loadUserPosts);\r\n}\r\n\r\nfunction* watchLoadHashtagPosts() {\r\n    yield throttle(5000,LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchUpdatePost() {\r\n    yield takeLatest(UPDATE_POST_REQUEST, updatePost);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchRetweet),\r\n        fork(watchUploadImages),\r\n        fork(watchLikePost),\r\n        fork(watchUnlikePost),\r\n        fork(watchAddPost),\r\n        fork(watchLoadPost),\r\n        fork(watchLoadPosts),\r\n        fork(watchLoadUserPosts),\r\n        fork(watchLoadHashtagPosts),\r\n        fork(watchUpdatePost),\r\n        fork(watchRemovePost),\r\n        fork(watchAddComment),\r\n    ]);\r\n}","import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\nimport axios from 'axios';\n\nfunction removeFollowerAPI(data) {\n  return axios.delete(`/user/follower/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    console.log('saga removeFollower');\n    const result = yield call(removeFollowerAPI, action.data);\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get('/user/followers', data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    console.log('saga loadFollowers');\n    const result = yield call(loadFollowersAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.get('/user/followings', data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    console.log('saga loadFollowings');\n    const result = yield call(loadFollowingsAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    console.log('saga changeNickname');\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    console.log('saga loadMyInfo');\n    const result = yield call(loadMyInfoAPI); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n    // npm i passport passport-local 로그인를 다루는 미들웨어\n\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  } // 성공결과는 result.data\n  // 실패결과는 err.response.data\n  // put은 디스패치라 생각하면 좋다\n\n}\n\nfunction loadUserAPI(data) {\n  return axios.get(`/user/${data}`);\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    console.log('saga follow');\n    const result = yield call(followAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    console.log('saga unfollow');\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log('saga logIn');\n    const result = yield call(logInAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n    // npm i passport passport-local 로그인를 다루는 미들웨어\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  } // 성공결과는 result.data\n  // 실패결과는 err.response.data\n  // put은 디스패치라 생각하면 좋다\n\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data); //작동순서 프론트 pages의 onSubmit에 데이터(아이디, 닉네임, 비밀번호)가\n    //SIGNUPREQ 를 통해 리덕스랑 사가 실행, 데이터 함수는 action으로가\n    //signUpAPI의 데이터로 이동 url을 통해 전송\n\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n} // yield take('LOG_IN_REQUEST');은 LOG_IN_REQUEST이 실행될때까지 기다리겠다.\n\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchRemoveFollower), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}\n;","import { all, fork } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport postSaga from './post';\r\nimport userSaga from './user';\r\nimport { backUrl } from '../config/config';\r\n\r\naxios.defaults.baseURL = backUrl;\r\n//sagas 의 post url를 등록\r\n//백 서버 아이피 넣기\r\naxios.defaults.withCredentials = true;\r\n//쿠기 전달 허용 이제 saga에 공통적으로 적용된다.\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        //all은 함수를 동시에 실행시킴\r\n        fork(postSaga),\r\n        fork(userSaga),\r\n        // fork는 비동기 함수를 실행하는 것\r\n        // 요청을 보내버리고 결과를 기다리지 않고 다음 것이 실행됨\r\n        // call은 동기 함수를 실행하는 것\r\n        // 결과를 기다렸다 다음 것이 실행됨. \r\n    ]);\r\n}\r\n    // generate 함수 function*\r\n    // const gen = function*(){\r\n    // console.log(1);\r\n    // yield;\r\n    // console.log(2);\r\n    // yield;   \r\n    //}\r\n    //\r\n    // const generator = gen();\r\n    // generator.next()  generate함수를 실행시키려면 next()필요\r\n    // console.log(1)실행. 다시 generator 함수를 실행하면\r\n    // console.log(2)실행 generate는 yield가 나오는 곳에서 멈춤\r\n    // 중단점이 있는 함수. 이것이 saga\r\n    // done: true가 나오면 멈춤\r\n    //\r\n    // generate 함수로 무한 표현하기\r\n    // let i = 0;\r\n    // const gen = function* () {\r\n    //     while (true) {\r\n    //         yield i++;\r\n    //     }\r\n    // }\r\n    // const g= gen();\r\n    // g.next();","import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux'; // combineReducer은 리듀서끼리 합치게 해준다.\n\nimport user from './user';\nimport post from './post'; //(이전상태, 액션) => 다음상태\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return action.payload;\n\n    default:\n      {\n        const combinedReducer = combineReducers({\n          user,\n          post\n        }); //combinedReducer user와 post가 합친 리듀서 생성\n\n        return combinedReducer(state, action);\n      }\n  }\n}; // const rootReducer = combineReducers({\n//     index: (state = {}, action) => {\n//         switch (action.type) {\n//             case HYDRATE:\n//                 console.log('HYDRATE', action);\n//                 return {\n//                     ...state,\n//                     ...action.payload,\n//                 };\n//             // HYDRATE를 위해 인덕스 리듀션을 추가\n//             default: return state;\n//             // default: return state;를 안적으면 리턴값이 undifined가 뜬다.\n//         }\n//     },\n//     user,\n//     post,\n// });\n\n\nexport default rootReducer;","import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport reducer from '../reducers';\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = true ? compose(applyMiddleware(...middlewares)) //배포용\n  : composeWithDevTools(applyMiddleware(...middlewares)); //개발용\n\n  const store = createStore(reducer, enhancer); //enhancer 미들웨어 액션기록을 보기위해 사용\n  //redux-devtools-extension\n\n  store.sagaTask = sagaMiddleware.run(rootSaga); //sagaTask 서바사이드 렌더링을 하기위해 필요\n\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE === 'development'\n});\nexport default wrapper;","module.exports = require(\"react/jsx-runtime\");","module.exports = require(\"next-redux-wrapper\");","import produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n    removeFollowerLoading: false, //팔로워 차단 가져오기\r\n    removeFollowerDone: false,\r\n    removeFollowerError: null,\r\n    loadMyInfoLoading: false, //유저정보 가져오기\r\n    loadMyInfoDone: false,\r\n    loadMyInfoError: null,\r\n    loadUserLoading: false, // 유저 정보 가져오기 시도중\r\n    loadUserDone: false,\r\n    loadUserError: null,\r\n    followLoading: false, // 팔로우 시도중\r\n    followDone: false,  // 팔로우 유무\r\n    followError: null,\r\n    unfollowLoading: false, // 언팔로우 시도중\r\n    unfollowDone: false,  // 언팔로우 유무\r\n    unfollowError: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,  // 로그인 유무\r\n    logInError: null,\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false, // 로그아웃 유무\r\n    logOutError: null,\r\n    signUpLoading: false, // 회원가입 시도중\r\n    signUpDone: false,  //\r\n    signUpError: null, //\r\n    loadFollowersLoading: false, // 팔로워 표시 시도중\r\n    loadFollowersDone: false,  //\r\n    loadFollowersError: null, //\r\n    loadFollowingsLoading: false, // 팔로잉 표시 시도중\r\n    loadFollowingsDone: false,  //\r\n    loadFollowingsError: null, //\r\n    changeNicknameLoading: false, //닉네임 변경 시도중\r\n    changeNicknameDone: false,  //\r\n    changeNicknameError: null, //\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nexport const loginAction = (data) => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        dispatch(loginRequestAction());\r\n        axios.post('/api/login')\r\n            .then((res) => {\r\n                dispatch(loginSuccessAction(res.data));\r\n            })\r\n            .catch((err) => {\r\n                dispatch(loginFailureAction(err));\r\n            })\r\n    }\r\n\r\n}\r\n\r\n//액션 생성기\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type: LOG_IN_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logoutRequestAction = (data) => {\r\n    return {\r\n        type: LOG_OUT_REQUEST,\r\n        //로그아웃은 데이터가 필요없다.\r\n    }\r\n}\r\n\r\n// const dummyUser = (data) => ({\r\n//     ...data,\r\n//     nickname: '쩡운',\r\n//     id: 1,\r\n//     Posts: [{ id: 1 }],\r\n//     Followings: [{ nickname: '오징어' }, { nickname: '명태' }, { nickname: '강아지' }],\r\n//     Followers: [{ nickname: '오징어' }, { nickname: '명태' }, { nickname: '강아지' }],\r\n// });\r\n\r\n// reducer은 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(불변성을 지키면서)\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case REMOVE_FOLLOWER_REQUEST:\r\n            draft.removeFollowerLoading = true;\r\n            draft.removeFollowerDone = false;\r\n            draft.removeFollowerError = null;\r\n            break;\r\n        case REMOVE_FOLLOWER_SUCCESS:\r\n            draft.removeFollowerLoading = false;\r\n            draft.removeFollowerDone = true;\r\n            draft.me.Followers = draft.me.Followers.filter((v) => v.id !== action.data.UserId);\r\n        case REMOVE_FOLLOWER_FAILURE:\r\n            draft.removeFollowerLoading = false;\r\n            draft.removeFollowerError = action.data.error;\r\n            break;\r\n\r\n        case LOAD_FOLLOWERS_REQUEST:\r\n            draft.loadFollowersLoading = true;\r\n            draft.loadFollowersDone = false;\r\n            draft.loadFollowersError = null;\r\n            break;\r\n        case LOAD_FOLLOWERS_SUCCESS:\r\n            draft.loadFollowersLoading = false;\r\n            draft.loadFollowersDone = true;\r\n            draft.me.Followers = action.data;\r\n        case LOAD_FOLLOWERS_FAILURE:\r\n            draft.loadFollowersLoading = false;\r\n            draft.loadFollowersError = action.data.error;\r\n            break;\r\n        \r\n        case LOAD_FOLLOWINGS_REQUEST:\r\n            draft.loadFollowingsLoading = true;\r\n            draft.loadFollowingsDone = false;\r\n            draft.loadFollowingsError = null;\r\n            break;\r\n        case LOAD_FOLLOWINGS_SUCCESS:\r\n            draft.loadFollowingsLoading = false;\r\n            draft.loadFollowingsDone = true;\r\n            draft.me.Followings = action.data;\r\n            break;\r\n        case LOAD_FOLLOWINGS_FAILURE:\r\n            draft.loadFollowingsLoading = false;\r\n            draft.loadFollowingsError = action.data.error;\r\n            break;\r\n\r\n        case LOAD_MY_INFO_REQUEST:\r\n            draft.loadMyInfoLoading = true;\r\n            draft.loadMyInfoDone = false;\r\n            draft.loadMyInfoError = null;\r\n            break;\r\n        case LOAD_MY_INFO_SUCCESS:\r\n            draft.loadMyInfoLoading = false;\r\n            draft.loadMyInfoDone = true;\r\n            draft.me = action.data;\r\n            break;\r\n        case LOAD_MY_INFO_FAILURE:\r\n            draft.loadMyInfoLoading = false;\r\n            draft.loadMyInfoError = action.data.error;\r\n            break;\r\n\r\n        case LOAD_USER_REQUEST:\r\n            draft.loadUserLoading = true;\r\n            draft.loadUserError = null;\r\n            draft.loadUserDone = false;\r\n            break;\r\n        case LOAD_USER_SUCCESS:\r\n            draft.loadUserLoading = false;\r\n            draft.userInfo = action.data;\r\n            draft.loadUserDone = true;\r\n            break;\r\n        case LOAD_USER_FAILURE:\r\n            draft.loadUserLoading = false;\r\n            draft.loadUserError = action.error;\r\n            break; \r\n\r\n        case FOLLOW_REQUEST:\r\n            draft.followLoading = true;\r\n            draft.followDone = false;\r\n            draft.followError = null;\r\n            break;\r\n        case FOLLOW_SUCCESS:\r\n            draft.followLoading = false;\r\n            draft.followDone = true;\r\n            draft.me.Followings.push({ id: action.data.UserId });\r\n            break;\r\n        case FOLLOW_FAILURE:\r\n            draft.followLoading = false;\r\n            draft.followError = action.error;\r\n            break;\r\n        case UNFOLLOW_REQUEST:\r\n            draft.unfollowLoading = true;\r\n            draft.unfollowDone = false;\r\n            draft.unfollowError = null;\r\n            break;\r\n            \r\n        case UNFOLLOW_SUCCESS:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowDone = true;\r\n            draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId);\r\n            break;\r\n        case UNFOLLOW_FAILURE:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowError = action.error;\r\n            break;\r\n\r\n        case LOG_IN_REQUEST:\r\n            console.log('reducer logIn');\r\n            draft.logInLoading = true;\r\n            draft.logInDone = false;\r\n            draft.logInError = null;\r\n            break;\r\n        case LOG_IN_SUCCESS:\r\n            draft.logInLoading = false;\r\n            draft.logInDone = true;\r\n            draft.me = action.data;\r\n            break;\r\n        case LOG_IN_FAILURE:\r\n            draft.logInLoading = false;\r\n            draft.logInError = action.error;\r\n            break;\r\n\r\n        case LOG_OUT_REQUEST:\r\n            draft.logOutLoading = true;\r\n            draft.logOutDone = false;\r\n            draft.logOutError = null;\r\n            break;\r\n        case LOG_OUT_SUCCESS:\r\n            draft.logOutLoading = false;\r\n            draft.logOutDone = true;\r\n            draft.me = null;\r\n            break;\r\n        case LOG_OUT_FAILURE:\r\n            draft.logOutLoading = false;\r\n            draft.logOutError = action.error;\r\n            break;\r\n\r\n        case SIGN_UP_REQUEST:\r\n            draft.signUpLoading = true;\r\n            draft.signUpDone = false;\r\n            draft.signUpError = null;\r\n            break;\r\n        case SIGN_UP_SUCCESS:\r\n            draft.signUpLoading = false;\r\n            draft.signUpDone = true;\r\n            break;\r\n        case SIGN_UP_FAILURE:\r\n            draft.signUpLoading = false;\r\n            draft.signUpError = action.error;\r\n            break;\r\n\r\n        case CHANGE_NICKNAME_REQUEST:\r\n            draft.changeNicknameLoading = true;\r\n            draft.changeNicknameDone = false;\r\n            draft.changeNicknameError = null;\r\n            break;\r\n        case CHANGE_NICKNAME_SUCCESS:\r\n            draft.me.nickname = action.data.nickname;\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameDone = true;\r\n            break;\r\n        case CHANGE_NICKNAME_FAILURE:\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameError = action.error;\r\n            break;\r\n        case ADD_POST_TO_ME:\r\n            draft.me.Posts.unshift({ id: action.data });\r\n            break;\r\n        // immer를 사용하면 위에 처럼 줄일 수 있다.\r\n        // return {\r\n        //     ...state,\r\n        //     me: {\r\n        //         ...state.me,\r\n        //         Posts: [{ id: action.data }, ...state.me.Posts],\r\n        //     },\r\n        // };\r\n        case REMOVE_POST_OF_ME:\r\n            draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n            break;\r\n        // immer를 사용하면 위에 처럼 줄일 수 있다.\r\n        // return {\r\n        //     ...state,\r\n        //     me: {\r\n        //         ...state.me,\r\n        //         Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n        //     },\r\n        // };\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\n\r\nexport default reducer;","export const backUrl = 'https://api.jeongwoon.site';","module.exports = require(\"redux-saga/effects\");","module.exports = require(\"immer\");","module.exports = require(\"react\");","import {produce, enableES5} from 'immer';\r\n\r\nexport default (...args) =>{\r\n    enableES5();\r\n    return produce(...args);\r\n};","import produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n    mainPosts: [\r\n        // {\r\n        //     id: 1,\r\n        //     User: {\r\n        //         id: 1,\r\n        //         nickname: '이정운',\r\n        //     },\r\n        //     content: '첫 번째 게시글 #해시태크 #익스프레스',\r\n        //     Images: [{\r\n        //         id: shortId.generate(),\r\n        //         src: 'https://3.bp.blogspot.com/-paIvI6xdE2k/WovHemFi6jI/AAAAAAACN20/6hBeNS_XVO0idJlKvTR_hKhDsaob7pdOgCLcBGAs/s1600/3.gif',\r\n        //     }, {\r\n        //         id: shortId.generate(),\r\n        //         src: 'https://coinpan.com/files/attach/images/198/013/866/096/b5a203116c9ff0d11a13d9bb43f7bb39.gif',\r\n        //     }, {\r\n        //         id: shortId.generate(),\r\n        //         src: 'http://t1.daumcdn.net/thumb/R1024x0/?fname=http://cfile271.uf.daum.net/image/276DCA3C5586B77E26FDB2',\r\n        //     }],\r\n        //     Comments: [{\r\n        //         id: shortId.generate(),\r\n        //         User: {\r\n        //             id: shortId.generate(),\r\n        //             nickname: '쩡운'\r\n        //         },\r\n        //         content: '호호호호',\r\n        //     }, {\r\n        //         id: shortId.generate(),\r\n        //         User: {\r\n        //             id: shortId.generate(),\r\n        //             nickname: '쩡훈',\r\n        //         },\r\n        //         content: '헝헝헝헝',\r\n        //     }],\r\n        // }\r\n    ],\r\n    singlePost: [],\r\n    imagePaths: [],\r\n    // imagePaths는 이미지 업로드할때 생기는 경로가 저장\r\n    hasMorePosts: true,\r\n    uploadImagesLoading: false,\r\n    uploadImagesDone: false,\r\n    uploadImagesError: null,\r\n    likePostLoading: false,\r\n    likePostDone: false,\r\n    likePostError: null,\r\n    unlikePostLoading: false,\r\n    unlikePostDone: false,\r\n    unlikePostError: null,\r\n    loadPostLoading: false,\r\n    loadPostDone: false,\r\n    loadPostError: null,\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    updatePostLoading: false,\r\n    updatePostDone: false,\r\n    updatePostError: null,\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n    retweetLoading: false,\r\n    retweetDone: false,\r\n    retweetError: null,\r\n};\r\n\r\n// 이제 안씀\r\n// export const generateDumyPost = (number) => Array(number).fill().map(() => ({\r\n//     id: shortId.generate(),\r\n//     User: {\r\n//         id: shortId.generate(),\r\n//         nickname: faker.name.findName(),\r\n//         //faker 랜덤 닉네임 \r\n//     },\r\n//     content: faker.lorem.paragraph(),\r\n//     //faker 랜덤 문단\r\n//     Images: [{\r\n//         src: faker.image.image(),\r\n//     }],\r\n//     Comments: [{\r\n//         User: {\r\n//             id: shortId.generate(),\r\n//             nickname: faker.name.findName(),\r\n//             //faker 랜덤 닉네임 \r\n//         },\r\n//         content: faker.lorem.sentence(),\r\n//         //faker 랜덤 문장\r\n//     }],\r\n// }));\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\r\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const addPost = (data) => ({\r\n    type: ADD_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\n// 이제 안쓴다.\r\n// const dummyPost = (data) => ({\r\n//     id: data.id,\r\n//     content: data.content,\r\n//     User: {\r\n//         id: 1,\r\n//         nickname: '이정운',\r\n//     },\r\n//     Images: [],\r\n//     Comments: [],\r\n// });\r\n\r\n// const dummyComment = (data) => ({\r\n//     id: shortId.generate(),\r\n//     content: data,\r\n//     User: {\r\n//         id: 1,\r\n//         nickname: '이정운',\r\n//     },\r\n// });\r\n\r\n\r\n// reducer은 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(불변성을 지키면서)\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case RETWEET_REQUEST:\r\n            console.log('reducer post');\r\n            draft.retweetLoading = true;\r\n            draft.retweetDone = false;\r\n            draft.retweetError = null;\r\n            break;\r\n        case RETWEET_SUCCESS:{\r\n            draft.retweetLoading = false;\r\n            draft.retweetDone = true;\r\n            draft.mainPosts.unshift(action.data);\r\n            break;\r\n        }\r\n        case RETWEET_FAILURE:\r\n            draft.retweetLoading = false;\r\n            draft.retweetError = action.error;\r\n            break;\r\n        \r\n        case REMOVE_IMAGE:\r\n            draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n        break;\r\n\r\n        case UPLOAD_IMAGES_REQUEST:\r\n            console.log('reducer post');\r\n            draft.uploadImagesLoading = true;\r\n            draft.uploadImagesDone = false;\r\n            draft.uploadImagesError = null;\r\n            break;\r\n        case UPLOAD_IMAGES_SUCCESS:{\r\n            draft.imagePaths = draft.imagePaths.concat(action.data);\r\n            draft.uploadImagesLoading = false;\r\n            draft.uploadImagesDone = true;\r\n            break;\r\n        }\r\n        case UPLOAD_IMAGES_FAILURE:\r\n            draft.uploadImagesLoading = false;\r\n            draft.uploadImagesError = action.error;\r\n            break;\r\n\r\n        case LIKE_POST_REQUEST:\r\n            console.log('reducer post');\r\n            draft.likePostLoading = true;\r\n            draft.likePostDone = false;\r\n            draft.likePostError = null;\r\n            break;\r\n        case LIKE_POST_SUCCESS:{\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            post.Likers.push({id: action.data.UserId});\r\n            draft.likePostLoading = false;\r\n            draft.likePostDone = true;\r\n            break;\r\n        }\r\n        case LIKE_POST_FAILURE:\r\n            draft.likePostLoading = false;\r\n            draft.likePostError = action.error;\r\n            break;\r\n        \r\n        case UNLIKE_POST_REQUEST:\r\n            console.log('reducer post');\r\n            draft.unlikePostLoading = true;\r\n            draft.unlikePostDone = false;\r\n            draft.unlikePostError = null;\r\n            break;\r\n        case UNLIKE_POST_SUCCESS:{\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            post.Likers=post.Likers.filter((v)=>v.id !== action.data.UserId);\r\n            draft.unlikePostLoading = false;\r\n            draft.unlikePostDone = true;\r\n            break;\r\n        }\r\n        case UNLIKE_POST_FAILURE:\r\n            draft.unlikePostLoading = false;\r\n            draft.unlikePostError = action.error;\r\n            break;\r\n        \r\n        case LOAD_POST_REQUEST:\r\n            console.log('reducer post');\r\n            draft.loadPostLoading = true;\r\n            draft.loadPostDone = false;\r\n            draft.loadPostError = null;\r\n            break;\r\n        case LOAD_POST_SUCCESS:\r\n            draft.mainPosts = draft.mainPosts.concat(action.data);\r\n            //concat 합치기\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostDone = true;\r\n            draft.singlePost = action.data;\r\n            //singlePost 하나만 저장할때\r\n            break;\r\n        case LOAD_POST_FAILURE:\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostError = action.error;\r\n            break;    \r\n            \r\n        //액션을 동시에 사용할 수 있는 경우는\r\n        //한페이지에서 이 액션을 같이 사용하는게 아니라면 가능\r\n        case LOAD_USER_POSTS_REQUEST:\r\n        case LOAD_HASHTAG_POSTS_REQUEST:\r\n        case LOAD_POSTS_REQUEST:\r\n            console.log('reducer post');\r\n            draft.loadPostsLoading = true;\r\n            draft.loadPostsDone = false;\r\n            draft.loadPostsError = null;\r\n            break;\r\n        case LOAD_USER_POSTS_SUCCESS:\r\n        case LOAD_HASHTAG_POSTS_SUCCESS:\r\n        case LOAD_POSTS_SUCCESS:\r\n            draft.mainPosts = draft.mainPosts.concat(action.data);\r\n            //concat 합치기\r\n            draft.loadPostsLoading = false;\r\n            draft.loadPostsDone = true;\r\n            draft.hasMorePosts = draft.mainPosts.length === 10;\r\n            break;\r\n        case LOAD_USER_POSTS_FAILURE:\r\n        case LOAD_HASHTAG_POSTS_FAILURE:\r\n        case LOAD_POSTS_FAILURE:\r\n            draft.loadPostsLoading = false;\r\n            draft.loadPostsError = action.error;\r\n            break;\r\n\r\n        case ADD_POST_REQUEST:\r\n            console.log('reducer post');\r\n            draft.addPostLoading = true;\r\n            draft.addPostDone = false;\r\n            draft.addPostError = null;\r\n            break;\r\n        case ADD_POST_SUCCESS:\r\n            draft.mainPosts.unshift(action.data);\r\n            draft.addPostLoading = false;\r\n            draft.addPostDone = true;\r\n            draft.imagePaths = [];\r\n            //업로드 후 이미지패스 초기화\r\n            break;\r\n        case ADD_POST_FAILURE:\r\n            draft.addPostLoading = false;\r\n            draft.addPostError = action.error;\r\n            break;\r\n\r\n        case UPDATE_POST_REQUEST:\r\n            console.log('reducer post');\r\n            draft.updatePostLoading = true;\r\n            draft.updatePostDone = false;\r\n            draft.updatePostError = null;\r\n            break;\r\n        case UPDATE_POST_SUCCESS:\r\n            draft.mainPosts.find((v) => v.id === action.data.PostId).content = action.data.content;\r\n            draft.updatePostLoading = false;\r\n            draft.updatePostDone = true;\r\n            break;\r\n        case UPDATE_POST_FAILURE:\r\n            draft.updatePostLoading = false;\r\n            draft.updatePostError = action.error;\r\n            break;\r\n\r\n        case REMOVE_POST_REQUEST:\r\n            console.log('reducer post');\r\n            draft.removePostLoading = true;\r\n            draft.removePostDone = false;\r\n            draft.removePostError = null;\r\n            break;\r\n        case REMOVE_POST_SUCCESS:\r\n            draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n            //불변성을 안지키는 거면 draft(immer)을 안쓰는것이 좋다.\r\n            draft.removePostLoading = false;\r\n            draft.removePostDone = true;\r\n            break;\r\n        case REMOVE_POST_FAILURE:\r\n            draft.removePostLoading = false;\r\n            draft.removePostError = action.error;\r\n            break;\r\n\r\n        case ADD_COMMENT_REQUEST:\r\n            draft.addCommentLoading = true;\r\n            draft.addCommentDone = false;\r\n            draft.addCommentError = null;\r\n            break;\r\n        case ADD_COMMENT_SUCCESS: {\r\n            const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n            post.Comments.unshift(action.data);\r\n            draft.addCommentLoading = false;\r\n            draft.addCommentDone = true;\r\n            break;\r\n            // immer 쓰면 이것이 위에 처럼 간단해진다.\r\n            // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n            // const post = { ...state.mainPosts[postIndex] };\r\n            // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n            // const mainPosts = [...state.mainPosts];\r\n            // mainPosts[postIndex] = post;\r\n            // return {\r\n            //     ...state,\r\n            //     mainPosts,\r\n            //     addCommentLoading: false,\r\n            //     addCommentDone: true,\r\n            // };\r\n        };\r\n        case ADD_COMMENT_FAILURE:\r\n            draft.addCommentLoading = false;\r\n            draft.addCommentError = action.error;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n});\r\n\r\n\r\n\r\nexport default reducer;","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"next/head\");","module.exports = require(\"axios\");"],"sourceRoot":""}