{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_USER_REQUEST, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\nimport axios from 'axios';\n\nfunction removeFollowerAPI(data) {\n  return axios.delete(`/user/follower/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    console.log('saga removeFollower');\n    const result = yield call(removeFollowerAPI, action.data);\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get('/user/followers', data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    console.log('saga loadFollowers');\n    const result = yield call(loadFollowersAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.get('/user/followings', data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    console.log('saga loadFollowings');\n    const result = yield call(loadFollowingsAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    console.log('saga changeNickname');\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo(acion) {\n  try {\n    console.log('saga loadMyInfo');\n    const result = yield call(loadMyInfoAPI); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n    // npm i passport passport-local 로그인를 다루는 미들웨어\n\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  } // 성공결과는 result.data\n  // 실패결과는 err.response.data\n  // put은 디스패치라 생각하면 좋다\n\n}\n\nfunction loadUserAPI(data) {\n  return axios.get(`/user/${data}`);\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    console.log('saga follow');\n    const result = yield call(followAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    console.log('saga unfollow');\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log('saga logIn');\n    const result = yield call(logInAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n    // npm i passport passport-local 로그인를 다루는 미들웨어\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  } // 성공결과는 result.data\n  // 실패결과는 err.response.data\n  // put은 디스패치라 생각하면 좋다\n\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data); //작동순서 프론트 pages의 onSubmit에 데이터(아이디, 닉네임, 비밀번호)가\n    //SIGNUPREQ 를 통해 리덕스랑 사가 실행, 데이터 함수는 action으로가\n    //signUpAPI의 데이터로 이동 url을 통해 전송\n\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n} // yield take('LOG_IN_REQUEST');은 LOG_IN_REQUEST이 실행될때까지 기다리겠다.\n\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchRemoveFollower), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}\n;","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_USER_REQUEST","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","REMOVE_FOLLOWER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","axios","removeFollowerAPI","data","delete","removeFollower","action","console","log","result","type","err","error","response","loadFollowersAPI","get","loadFollowers","loadFollowingsAPI","loadFollowings","changeNicknameAPI","patch","nickname","changeNickname","loadMyInfoAPI","loadMyInfo","acion","loadUserAPI","loadUser","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","followAPI","follow","unfollowAPI","unfollow","logInAPI","post","logIn","logOutAPI","logOut","signUpAPI","signUp","watchRemoveFollower","watchLoadFollowers","watchLoadFollowings","watchChangeNickname","watchLoadMyInfo","watchLoadUser","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_USER_REQUEST, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\r\nimport axios from 'axios';\r\n\r\nfunction removeFollowerAPI(data) {\r\n    return axios.delete(`/user/follower/${data}`);\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n    try {\r\n        console.log('saga removeFollower');\r\n        const result = yield call(removeFollowerAPI, action.data);\r\n        \r\n        yield put({\r\n            type: REMOVE_FOLLOWER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadFollowersAPI(data) {\r\n    return axios.get('/user/followers', data);\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n    try {\r\n        console.log('saga loadFollowers');\r\n        const result = yield call(loadFollowersAPI, action.data);\r\n        \r\n        yield put({\r\n            type: LOAD_FOLLOWERS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n    return axios.get('/user/followings', data);\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n    try {\r\n        console.log('saga loadFollowings');\r\n        const result = yield call(loadFollowingsAPI, action.data);\r\n        \r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n    return axios.patch('/user/nickname',{nickname: data});\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n    try {\r\n        console.log('saga changeNickname');\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n        \r\n        yield put({\r\n            type: CHANGE_NICKNAME_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: CHANGE_NICKNAME_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo(acion) {\r\n    try {\r\n        console.log('saga loadMyInfo');\r\n        const result = yield call(loadMyInfoAPI);\r\n        //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \r\n        // npm i passport passport-local 로그인를 다루는 미들웨어\r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOAD_MY_INFO_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n\r\n    // 성공결과는 result.data\r\n    // 실패결과는 err.response.data\r\n    // put은 디스패치라 생각하면 좋다\r\n}\r\n\r\nfunction loadUserAPI(data) {\r\n        return axios.get(`/user/${data}`);\r\n    }\r\n  \r\n    function* loadUser(action) {\r\n        try {\r\n            const result = yield call(loadUserAPI, action.data);\r\n            yield put({\r\n                type: LOAD_USER_SUCCESS,\r\n                data: result.data,\r\n            });\r\n        } catch (err) {\r\n            console.error(err);\r\n            yield put({\r\n                type: LOAD_USER_FAILURE,\r\n                error: err.response.data,\r\n            });\r\n        }\r\n    }\r\n  \r\n\r\nfunction followAPI(data) {\r\n    return axios.patch(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        console.log('saga follow');\r\n        const result = yield call(followAPI, action.data);\r\n        //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.delete(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        const result = yield call(unfollowAPI, action.data);\r\n        console.log('saga unfollow');\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        console.log('saga logIn');\r\n        const result = yield call(logInAPI, action.data);\r\n        //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \r\n        // npm i passport passport-local 로그인를 다루는 미들웨어\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n\r\n    // 성공결과는 result.data\r\n    // 실패결과는 err.response.data\r\n    // put은 디스패치라 생각하면 좋다\r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/user/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        const result = yield call(signUpAPI, action.data);\r\n        //작동순서 프론트 pages의 onSubmit에 데이터(아이디, 닉네임, 비밀번호)가\r\n        //SIGNUPREQ 를 통해 리덕스랑 사가 실행, 데이터 함수는 action으로가\r\n        //signUpAPI의 데이터로 이동 url을 통해 전송\r\n        console.log(result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction* watchRemoveFollower() {\r\n    yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\nfunction* watchLoadFollowers() {\r\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\nfunction* watchLoadFollowings() {\r\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\nfunction* watchChangeNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\nfunction* watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n  }\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n// yield take('LOG_IN_REQUEST');은 LOG_IN_REQUEST이 실행될때까지 기다리겠다.\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchRemoveFollower),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n        fork(watchChangeNickname),\r\n        fork(watchLoadMyInfo),\r\n        fork(watchLoadUser),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ]);\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}