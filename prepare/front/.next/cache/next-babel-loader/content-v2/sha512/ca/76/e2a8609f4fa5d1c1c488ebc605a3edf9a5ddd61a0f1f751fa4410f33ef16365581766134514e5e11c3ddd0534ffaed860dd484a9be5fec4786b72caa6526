{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\job\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\n// post/[id]sms\n// post[1], post[2], post[3] 순서대로 올라감\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport wrapper from '../../store/configureStore';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\n\nconst Post = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    id\n  } = router.query; // return (\n  //     <AppLayout>\n  //         <PostCard post={singlePost} />\n  //     </AppLayout>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: `${singlePost.User.nickname}님의 게시글`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: singlePost.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:image\",\n        content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:url\",\n        content: `https://nodebird.com/post/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(PostCard, {\n      post: singlePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}; // // export async function getStaticPaths() {\n// //   return {\n// //     paths: [\n// //       { params: { id: '1' } },\n// //       { params: { id: '2' } },\n// //       { params: { id: '3' } },\n// //       { params: { id: '4' } },\n// //     ],\n// //     fallback: true,\n// //   };\n// // }\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  console.log(context);\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  return {\n    props: {}\n  };\n});\nexport default Post;","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/pages/post/[id].js"],"names":["React","useSelector","Head","useRouter","END","axios","LOAD_POST_REQUEST","wrapper","PostCard","AppLayout","LOAD_MY_INFO_REQUEST","Post","singlePost","state","post","router","id","query","User","nickname","content","Images","src","getServerSideProps","context","cookie","req","headers","console","log","defaults","Cookie","store","dispatch","type","data","params","sagaTask","toPromise","props"],"mappings":";;AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,oBAAT,QAAqC,qBAArC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAiBX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAlC;AACA,QAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAM;AAAEa,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB,CAHe,CAKf;AACA;AACA;AACA;AACA;;AAEA,sBACI,QAAC,SAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,mBACGL,UAAU,CAACM,IAAX,CAAgBC,QADnB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEP,UAAU,CAACQ;AAA7C;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAG,GAAER,UAAU,CAACM,IAAX,CAAgBC,QAAS;AAA/D;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAM,QAAA,QAAQ,EAAC,gBAAf;AAAgC,QAAA,OAAO,EAAEP,UAAU,CAACQ;AAApD;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAER,UAAU,CAACS,MAAX,CAAkB,CAAlB,IAAuBT,UAAU,CAACS,MAAX,CAAkB,CAAlB,EAAqBC,GAA5C,GAAkD;AAArF;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAM,QAAA,QAAQ,EAAC,QAAf;AAAwB,QAAA,OAAO,EAAG,6BAA4BN,EAAG;AAAjE;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEJ;AAAhB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA5BD,C,CA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMW,kBAAkB,GAAGhB,OAAO,CAACgB,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAnB,EAAAA,KAAK,CAACyB,QAAN,CAAeH,OAAf,CAAuBI,MAAvB,GAAgC,EAAhC;;AACA,MAAIP,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACvBpB,IAAAA,KAAK,CAACyB,QAAN,CAAeH,OAAf,CAAuBI,MAAvB,GAAgCN,MAAhC;AACH;;AACDD,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAExB;AADa,GAAvB;AAGAc,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAE5B,iBADa;AAEnB6B,IAAAA,IAAI,EAAEX,OAAO,CAACY,MAAR,CAAepB;AAFF,GAAvB;AAIAQ,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB7B,GAAvB;AACA,QAAMoB,OAAO,CAACQ,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;AACA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAP;AACH,CAjBiC,CAA3B;AAmBP,eAAe5B,IAAf","sourcesContent":["// post/[id]sms\r\n// post[1], post[2], post[3] 순서대로 올라감\r\n\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\nimport { END } from 'redux-saga';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport wrapper from '../../store/configureStore';\r\nimport PostCard from '../../components/PostCard';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\n\r\nconst Post = () => {\r\n    const { singlePost } = useSelector((state) => state.post);\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n\r\n    // return (\r\n    //     <AppLayout>\r\n    //         <PostCard post={singlePost} />\r\n    //     </AppLayout>\r\n    // );\r\n\r\n    return (\r\n        <AppLayout>\r\n          <Head>\r\n            <title>\r\n              {singlePost.User.nickname}\r\n              님의 글\r\n            </title>\r\n            <meta name=\"description\" content={singlePost.content} />\r\n            <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\r\n            <meta property=\"og:description\" content={singlePost.content} />\r\n            <meta property=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'} />\r\n            <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n            {/* og 는 미리보기 og:url 미리보기 후 링크 주는거  */}\r\n          </Head>\r\n          <PostCard post={singlePost} />\r\n        </AppLayout>\r\n      );\r\n};\r\n\r\n// // export async function getStaticPaths() {\r\n// //   return {\r\n// //     paths: [\r\n// //       { params: { id: '1' } },\r\n// //       { params: { id: '2' } },\r\n// //       { params: { id: '3' } },\r\n// //       { params: { id: '4' } },\r\n// //     ],\r\n// //     fallback: true,\r\n// //   };\r\n// // }\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    console.log(context);\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n    return { props: {} };\r\n});\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}