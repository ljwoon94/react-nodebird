{"ast":null,"code":"import { all, delay, fork, put, takeLatest, call, throttle } from \"redux-saga/effects\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\nimport axios from 'axios';\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    console.log('saga post');\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    console.log('saga post');\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    console.log('saga post');\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI(data) {\n  return axios.get('/posts', data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    console.log('saga post');\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    console.log('saga post');\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    console.log('saga post');\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchUploadImages), fork(watchLikePost), fork(watchUnlikePost), fork(watchAddPost), fork(watchLoadPosts), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/sagas/post.js"],"names":["all","delay","fork","put","takeLatest","call","throttle","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","axios","uploadImagesAPI","data","post","uploadImages","action","result","console","log","type","err","error","response","likePostAPI","patch","likePost","unlikePostAPI","delete","unlikePost","loadPostsAPI","get","loadPosts","addPostAPI","content","addPost","id","removePostAPI","removePost","addCommentAPI","postId","addComment","watchUploadImages","watchLikePost","watchUnlikePost","watchLoadPosts","watchAddPost","watchRemovePost","watchAddComment","postSaga"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeLatest ,call, throttle} from \"redux-saga/effects\";\r\nimport {\r\n    ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS,\r\n    ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS,\r\n    LIKE_POST_FAILURE,\r\n    LIKE_POST_REQUEST,\r\n    LIKE_POST_SUCCESS,\r\n    LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS,\r\n    REMOVE_POST_FAILURE, REMOVE_POST_REQUEST,\r\n    REMOVE_POST_SUCCESS,\r\n    UNLIKE_POST_FAILURE,\r\n    UNLIKE_POST_REQUEST,\r\n    UNLIKE_POST_SUCCESS,\r\n    UPLOAD_IMAGES_FAILURE,\r\n    UPLOAD_IMAGES_REQUEST,\r\n    UPLOAD_IMAGES_SUCCESS,\r\n} from \"../reducers/post\";\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\r\nimport axios from 'axios';\r\n\r\nfunction uploadImagesAPI(data) {\r\n    return axios.post('/post/images',data);\r\n}\r\n\r\n\r\nfunction* uploadImages(action) {\r\n    try {\r\n        const result = yield call(uploadImagesAPI, action.data);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: UPLOAD_IMAGES_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UPLOAD_IMAGES_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n    return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\n\r\nfunction* likePost(action) {\r\n    try {\r\n        const result = yield call(likePostAPI, action.data);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: LIKE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LIKE_POST_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n    return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n    try {\r\n        const result = yield call(unlikePostAPI, action.data);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: UNLIKE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNLIKE_POST_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadPostsAPI(data) {\r\n    return axios.get('/posts', data);\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n    try {\r\n        const result = yield call(loadPostsAPI, action.data);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: LOAD_POSTS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_POSTS_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/post', {content:data});\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        const result = yield call(addPostAPI, action.data);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n        yield put({\r\n            type: ADD_POST_TO_ME,\r\n            data: result.data.id,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n    return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action) {\r\n    try {\r\n        const result = yield call(removePostAPI, action.data);\r\n        console.log('saga post');\r\n        yield put({\r\n            type: REMOVE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n        yield put({\r\n            type: REMOVE_POST_OF_ME,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: REMOVE_POST_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        const result = yield call(addCommentAPI, action.data);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n    yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\n\r\nfunction* watchLikePost() {\r\n    yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\n\r\nfunction* watchUnlikePost() {\r\n    yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\n\r\nfunction* watchLoadPosts() {\r\n    yield throttle(5000,LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\n\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchUploadImages),\r\n        fork(watchLikePost),\r\n        fork(watchUnlikePost),\r\n        fork(watchAddPost),\r\n        fork(watchLoadPosts),\r\n        fork(watchRemovePost),\r\n        fork(watchAddComment),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}