{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nexport default _s(function () {\n  _s();\n\n  var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _useState = useState(initValue),\n      value = _useState[0],\n      setter = _useState[1];\n\n  var handler = useCallback(function (e) {\n    setter(e.target.value);\n  }, []);\n  return [value, handler, setter];\n}, \"jJC7NbJZBwPw2rLfrH4q62FtgpU=\"); // import { useState, useCallback } from 'react';\n// const useInput = (initialValue = null) => {\n//     const [value, setValue] = useState(initialValue);\n//     const handler = useCallback((e) => {\n//         setValue(e.target.value);\n//     }, []);\n//     return [value, handler, setValue];\n// }\n// // 커스텀 훅으로 계속 반복되는 코드를 만들어둠\n// export default useInput;","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/hooks/useInput.js"],"names":["useState","useCallback","initValue","value","setter","handler","e","target"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,kBAAe,YAAsB;AAAA;;AAAA,MAArBC,SAAqB,uEAAT,IAAS;;AAAA,kBACXF,QAAQ,CAACE,SAAD,CADG;AAAA,MAC5BC,KAD4B;AAAA,MACrBC,MADqB;;AAEnC,MAAMC,OAAO,GAAGJ,WAAW,CAAC,UAACK,CAAD,EAAO;AACjCF,IAAAA,MAAM,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAN;AACD,GAF0B,EAExB,EAFwB,CAA3B;AAGA,SAAO,CAACA,KAAD,EAAQE,OAAR,EAAiBD,MAAjB,CAAP;AACD,CAND,kC,CAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\nexport default (initValue = null) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler, setter];\r\n};\r\n\r\n// import { useState, useCallback } from 'react';\r\n\r\n// const useInput = (initialValue = null) => {\r\n//     const [value, setValue] = useState(initialValue);\r\n//     const handler = useCallback((e) => {\r\n//         setValue(e.target.value);\r\n//     }, []);\r\n//     return [value, handler, setValue];\r\n// }\r\n\r\n// // 커스텀 훅으로 계속 반복되는 코드를 만들어둠\r\n// export default useInput;"]},"metadata":{},"sourceType":"module"}