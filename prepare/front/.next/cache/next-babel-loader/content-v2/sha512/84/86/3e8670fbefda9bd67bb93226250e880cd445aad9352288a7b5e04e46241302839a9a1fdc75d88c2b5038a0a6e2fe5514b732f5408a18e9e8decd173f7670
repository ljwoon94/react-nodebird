{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\job\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout'; //next에선 import React를 반드시 할 필요가 없다.\n//next는 pages 폴더를 인식해서 개별적으로 페이지로 만든다.\n\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n\n      if (windpw.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight) {\n        dispatch({\n          type: LOAD_POSTS_REQUEST\n        });\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll); //종료하지 않으면 큰일남.\n    };\n  }, []); // 스크롤 끝까지 내릴시 로딩 후 이미지 가져오기\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 39\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this) // AppLayout은 components 폴더에 있다.\n  // AppLayout 안에 있는 div는 {children}이 된다. \n  ;\n};\n\nexport default Home; // npm run dev 라고 입력하면 package.json 에 scripts에 정의해둔\n// 스크립트가 실행된다. dev 말고 정의해둔 값을 입력하면 스크립트 실행된다.\n// antd, antd icon 따로 설치 \n// antd는 ant design으로 중국 디자인 사이트\n// antd 안먹히면 @ctrl/tinycolor 3.3.1 추가해라","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","me","state","user","mainPosts","post","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","windpw","addEventListener","removeEventListener","map","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBV,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAjC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAER;AADD,KAAD,CAAR;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAN,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASe,QAAT,GAAoB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB,EAA4BC,QAAQ,CAACC,eAAT,CAAyBC,YAArD,EAAmEF,QAAQ,CAACC,eAAT,CAAyBE,YAA5F;;AACA,UAAIC,MAAM,CAACL,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,KAA2DF,QAAQ,CAACC,eAAT,CAAyBE,YAAxF,EAAsG;AAClGf,QAAAA,QAAQ,CAAC;AACLM,UAAAA,IAAI,EAAER;AADD,SAAD,CAAR;AAGH;AACJ;;AACDY,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCV,QAAlC;AACA,WAAO,MAAM;AACTG,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCX,QAArC,EADS,CAET;AACH,KAHD;AAIH,GAdQ,EAcN,EAdM,CAAT,CAXe,CA0Bf;;AAEA,sBACI,QAAC,SAAD;AAAA,eACKN,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADX,EAEKG,SAAS,CAACe,GAAV,CAAed,IAAD,iBAAW,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACe,EAApB;AAAA;AAAA;AAAA;AAAA,YAAzB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAKI;AACA;AANJ;AAQH,CApCD;;AAsCA,eAAerB,IAAf,C,CAGA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\n//next에선 import React를 반드시 할 필요가 없다.\r\n//next는 pages 폴더를 인식해서 개별적으로 페이지로 만든다.\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const { me } = useSelector((state) => state.user);\r\n    const { mainPosts } = useSelector((state) => state.post);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\r\n            if (windpw.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight) {\r\n                dispatch({\r\n                    type: LOAD_POSTS_REQUEST,\r\n                });\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n            //종료하지 않으면 큰일남.\r\n        };\r\n    }, []);\r\n    // 스크롤 끝까지 내릴시 로딩 후 이미지 가져오기\r\n\r\n    return (\r\n        <AppLayout>\r\n            {me && <PostForm />}\r\n            {mainPosts.map((post) => (<PostCard key={post.id} post={post} />))}\r\n        </AppLayout>\r\n        // AppLayout은 components 폴더에 있다.\r\n        // AppLayout 안에 있는 div는 {children}이 된다. \r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n// npm run dev 라고 입력하면 package.json 에 scripts에 정의해둔\r\n// 스크립트가 실행된다. dev 말고 정의해둔 값을 입력하면 스크립트 실행된다.\r\n// antd, antd icon 따로 설치 \r\n// antd는 ant design으로 중국 디자인 사이트\r\n// antd 안먹히면 @ctrl/tinycolor 3.3.1 추가해라"]},"metadata":{},"sourceType":"module"}