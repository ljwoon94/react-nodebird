{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\job\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout'; //next에선 import React를 반드시 할 필요가 없다.\n//next는 pages 폴더를 인식해서 개별적으로 페이지로 만든다.\n\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostsLoading = _useSelector2.loadPostsLoading,\n      retweetError = _useSelector2.retweetError;\n\n  useEffect(function () {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(function () {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST\n    });\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        //끝에서 300픽셀보다 더 내렸을 경우\n        if (hasMorePosts && !loadPostsLoading) {\n          var lastId = mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId: lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll); //종료하지 않으면 큰일남.\n    };\n  }, [mainPosts, hasMorePosts, loadPostsLoading]); // 스크롤 끝까지 내릴시 로딩 후 이미지 가져오기\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 20\n    }, _this), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 39\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, _this) // AppLayout은 components 폴더에 있다.\n  // AppLayout 안에 있는 div는 {children}이 된다. \n  ;\n};\n\n_s(Home, \"eO+QMWR+/tIpNUDFV1MauWXrqHY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home; // npm run dev 라고 입력하면 package.json 에 scripts에 정의해둔\n// 스크립트가 실행된다. dev 말고 정의해둔 값을 입력하면 스크립트 실행된다.\n// antd, antd icon 따로 설치 \n// antd는 ant design으로 중국 디자인 사이트\n// antd 안먹히면 @ctrl/tinycolor 3.3.1 추가해라\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePosts","loadPostsLoading","retweetError","alert","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","addEventListener","removeEventListener","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,QAAqC,kBAArC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AADe,qBAEAC,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAFX;AAAA,MAEPC,EAFO,gBAEPA,EAFO;;AAAA,sBAGqDV,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAHhE;AAAA,MAGPC,SAHO,iBAGPA,SAHO;AAAA,MAGIC,YAHJ,iBAGIA,YAHJ;AAAA,MAGkBC,gBAHlB,iBAGkBA,gBAHlB;AAAA,MAGoCC,YAHpC,iBAGoCA,YAHpC;;AAKfjB,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGiB,YAAH,EAAgB;AACZC,MAAAA,KAAK,CAACD,YAAD,CAAL;AACH;AACJ,GAJQ,EAIP,CAACA,YAAD,CAJO,CAAT;AAMAjB,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;AAGAE,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEb;AADD,KAAD,CAAR;AAGH,GAPQ,EAON,EAPM,CAAT;AASAN,EAAAA,SAAS,CAAC,YAAM;AACZ,aAASoB,QAAT,GAAoB;AAChB,UAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACtG;AACA,YAAIX,YAAY,IAAI,CAACC,gBAArB,EAAuC;AACnC,cAAMW,MAAM,GAAGb,SAAS,CAACA,SAAS,CAACc,MAAV,GAAkB,CAAnB,CAAT,IAAkCd,SAAS,CAACA,SAAS,CAACc,MAAV,GAAkB,CAAnB,CAAT,CAA+BC,EAAhF;AACApB,UAAAA,QAAQ,CAAC;AACLU,YAAAA,IAAI,EAAEb,kBADD;AAELqB,YAAAA,MAAM,EAANA;AAFK,WAAD,CAAR;AAIH;AAEJ;AACJ;;AACDN,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCV,QAAlC;AACA,WAAO,YAAM;AACTC,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCX,QAArC,EADS,CAET;AACH,KAHD;AAIH,GAnBQ,EAmBN,CAACN,SAAD,EAAYC,YAAZ,EAA0BC,gBAA1B,CAnBM,CAAT,CApBe,CAwCf;;AAEA,sBACI,QAAC,SAAD;AAAA,eACKJ,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,aADX,EAEKE,SAAS,CAACkB,GAAV,CAAc,UAACnB,IAAD;AAAA,0BAAW,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACgB,EAApB;AAAA;AAAA;AAAA;AAAA,eAAX;AAAA,KAAd,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CAKI;AACA;AANJ;AAQH,CAlDD;;GAAMrB,I;UACeP,W,EACFC,W,EACqDA,W;;;KAHlEM,I;AAoDN,eAAeA,IAAf,C,CAGA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\n//next에선 import React를 반드시 할 필요가 없다.\r\n//next는 pages 폴더를 인식해서 개별적으로 페이지로 만든다.\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const { me } = useSelector((state) => state.user);\r\n    const { mainPosts, hasMorePosts, loadPostsLoading, retweetError } = useSelector((state) => state.post);\r\n\r\n    useEffect(()=>{\r\n        if(retweetError){\r\n            alert(retweetError);\r\n        }\r\n    },[retweetError]);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_MY_INFO_REQUEST,\r\n        });\r\n        dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n                //끝에서 300픽셀보다 더 내렸을 경우\r\n                if (hasMorePosts && !loadPostsLoading) {\r\n                    const lastId = mainPosts[mainPosts.length -1] && mainPosts[mainPosts.length -1].id;\r\n                    dispatch({\r\n                        type: LOAD_POSTS_REQUEST,\r\n                        lastId,\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n            //종료하지 않으면 큰일남.\r\n        };\r\n    }, [mainPosts, hasMorePosts, loadPostsLoading]);\r\n    // 스크롤 끝까지 내릴시 로딩 후 이미지 가져오기\r\n\r\n    return (\r\n        <AppLayout>\r\n            {me && <PostForm />}\r\n            {mainPosts.map((post) => (<PostCard key={post.id} post={post} />))}\r\n        </AppLayout>\r\n        // AppLayout은 components 폴더에 있다.\r\n        // AppLayout 안에 있는 div는 {children}이 된다. \r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n// npm run dev 라고 입력하면 package.json 에 scripts에 정의해둔\r\n// 스크립트가 실행된다. dev 말고 정의해둔 값을 입력하면 스크립트 실행된다.\r\n// antd, antd icon 따로 설치 \r\n// antd는 ant design으로 중국 디자인 사이트\r\n// antd 안먹히면 @ctrl/tinycolor 3.3.1 추가해라"]},"metadata":{},"sourceType":"module"}