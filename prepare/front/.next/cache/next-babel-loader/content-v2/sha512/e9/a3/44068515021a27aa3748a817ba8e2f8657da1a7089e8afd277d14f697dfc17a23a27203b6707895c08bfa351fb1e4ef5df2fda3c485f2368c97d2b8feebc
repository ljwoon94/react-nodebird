{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\job\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostCard.js\";\nimport React, { useCallback, useState } from 'react';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onLike = useCallback(() => {\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onUnLike = useCallback(() => {\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const liked = post.Likers.find(v => v.id === id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 42\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: onRemovePost,\n              loading: removePostLoading,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)],\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 30\n      }, this) //extra는 우측상단에 공간을 만들어준다.\n      ,\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 45\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/components/PostCard.js"],"names":["React","useCallback","useState","Card","Popover","Button","Avatar","List","Comment","PropTypes","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","useDispatch","useSelector","PostImages","CommentForm","PostCardContent","LIKE_POST_REQUEST","REMOVE_POST_REQUEST","UNLIKE_POST_REQUEST","FollowButton","PostCard","post","dispatch","removePostLoading","state","commentFormOpened","setCommentFormOpened","onLike","type","data","id","onUnLike","onToggleComment","prev","onRemovePost","user","me","liked","Likers","find","v","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createAt","arrayOf","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,IAAxC,EAA8CC,OAA9C,QAA6D,MAA7D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,eAAzC,EAA0DC,gBAA1D,EAA4EC,YAA5E,QAAiG,mBAAjG;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,EAAiDC,mBAAjD,QAA4E,kBAA5E;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC3B,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAwBX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACH,IAAlB,CAAzC;AACA,QAAM;AAAA,OAACI,iBAAD;AAAA,OAAoBC;AAApB,MAA4C5B,QAAQ,CAAC,KAAD,CAA1D;AAEA,QAAM6B,MAAM,GAAG9B,WAAW,CAAC,MAAM;AAC7ByB,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEZ,iBADD;AAELa,MAAAA,IAAI,EAAER,IAAI,CAACS;AAFN,KAAD,CAAR;AAIH,GALyB,EAKvB,EALuB,CAA1B;AAMA,QAAMC,QAAQ,GAAGlC,WAAW,CAAC,MAAM;AAC/ByB,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEV,mBADD;AAELW,MAAAA,IAAI,EAAER,IAAI,CAACS;AAFN,KAAD,CAAR;AAIH,GAL2B,EAKzB,EALyB,CAA5B;AAMA,QAAME,eAAe,GAAGnC,WAAW,CAAC,MAAM;AACtC6B,IAAAA,oBAAoB,CAAEO,IAAD,IAAU,CAACA,IAAZ,CAApB;AACH,GAFkC,EAEhC,EAFgC,CAAnC;AAIA,QAAMC,YAAY,GAAGrC,WAAW,CAAC,MAAM;AACnCyB,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEX,mBADD;AAELY,MAAAA,IAAI,EAAER,IAAI,CAACS;AAFN,KAAD,CAAR;AAIH,GAL+B,EAK7B,EAL6B,CAAhC;AAOA,QAAMA,EAAE,GAAGlB,WAAW,CAAEY,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACW,IAAN,CAAWC,EAAtB,mDAAW,eAAeN,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAMO,KAAK,GAAGhB,IAAI,CAACiB,MAAL,CAAYC,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACV,EAAF,KAASA,EAAjC,CAAd;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEW,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA,4BACI,QAAC,IAAD;AACI,MAAA,KAAK,EAAEpB,IAAI,CAACqB,MAAL,CAAY,CAAZ,kBAAkB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAErB,IAAI,CAACqB;AAAzB;AAAA;AAAA;AAAA;AAAA,cAD7B;AAEI,MAAA,OAAO,EAAE,cACL,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cADK,EAELL,KAAK,gBACC,QAAC,YAAD;AAAc,QAAA,YAAY,EAAC,SAA3B;AAAiD,QAAA,OAAO,EAAEN;AAA1D,SAAyC,OAAzC;AAAA;AAAA;AAAA;AAAA,cADD,gBAEC,QAAC,aAAD;AAA2B,QAAA,OAAO,EAAEJ;AAApC,SAAmB,OAAnB;AAAA;AAAA;AAAA;AAAA,cAJD,eAKL,QAAC,eAAD;AAA+B,QAAA,OAAO,EAAEK;AAAxC,SAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cALK,eAML,QAAC,OAAD;AAAoB,QAAA,OAAO,eACvB,QAAC,MAAD,CAAQ,KAAR;AAAA,oBACKF,EAAE,IAAIT,IAAI,CAACsB,IAAL,CAAUb,EAAV,KAAiBA,EAAvB,gBAEO;AAAA,oCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAEI,YAA/B;AACI,cAAA,OAAO,EAAEX,iBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,0BAFP,gBAQK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA,+BAaI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAbJ,SAAa,MAAb;AAAA;AAAA;AAAA;AAAA,cANK,CAFb;AAwBI,MAAA,KAAK,EAAEO,EAAE,iBAAI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAET;AAApB;AAAA;AAAA;AAAA;AAAA,cAxBjB,CAyBA;AAzBA;AAAA,6BA2BI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,MAAM,eAAE,QAAC,MAAD;AAAA,oBAASA,IAAI,CAACsB,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,gBADZ;AAEI,QAAA,KAAK,EAAEvB,IAAI,CAACsB,IAAL,CAAUC,QAFrB;AAGI,QAAA,WAAW,eAAE,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAEvB,IAAI,CAACwB;AAAhC;AAAA;AAAA;AAAA;AAAA;AAHjB;AAAA;AAAA;AAAA;AAAA;AA3BJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAkCKpB,iBAAiB,iBACd;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AACI,QAAA,MAAM,EAAG,GAAEA,IAAI,CAACyB,QAAL,CAAcC,MAAO,OADpC;AAEI,QAAA,UAAU,EAAC,YAFf;AAGI,QAAA,UAAU,EAAE1B,IAAI,CAACyB,QAHrB;AAII,QAAA,UAAU,EAAGE,IAAD,iBACR;AAAA,iCACI,QAAC,OAAD;AACI,YAAA,MAAM,EAAEA,IAAI,CAACL,IAAL,CAAUC,QADtB;AAEI,YAAA,MAAM,eAAE,QAAC,MAAD;AAAA,wBAASI,IAAI,CAACL,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,oBAFZ;AAGI,YAAA,OAAO,EAAEI,IAAI,CAACH;AAHlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2DH,CAzFD;;AA2FAzB,QAAQ,CAAC6B,SAAT,GAAqB;AACjB5B,EAAAA,IAAI,EAAEhB,SAAS,CAAC6C,KAAV,CAAgB;AAClBpB,IAAAA,EAAE,EAAEzB,SAAS,CAAC8C,MADI;AAElBR,IAAAA,IAAI,EAAEtC,SAAS,CAAC+C,MAFE;AAGlBP,IAAAA,OAAO,EAAExC,SAAS,CAACgD,MAHD;AAIlBC,IAAAA,QAAQ,EAAEjD,SAAS,CAACgD,MAJF;AAKlBP,IAAAA,QAAQ,EAAEzC,SAAS,CAACkD,OAAV,CAAkBlD,SAAS,CAAC+C,MAA5B,CALQ;AAMlBV,IAAAA,MAAM,EAAErC,SAAS,CAACkD,OAAV,CAAkBlD,SAAS,CAAC+C,MAA5B,CANU;AAOlBd,IAAAA,MAAM,EAAEjC,SAAS,CAACkD,OAAV,CAAkBlD,SAAS,CAAC+C,MAA5B;AAPU,GAAhB,EAQHI;AATc,CAArB;AAYA,eAAepC,QAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone, } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PostImages from './PostImages';\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\r\nimport FollowButton from './FollowButton';\r\n\r\nconst PostCard = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const { removePostLoading } = useSelector((state) => state.post);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    \r\n    const onLike = useCallback(() => {\r\n        dispatch({\r\n            type: LIKE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, []);\r\n    const onUnLike = useCallback(() => {\r\n        dispatch({\r\n            type: UNLIKE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, []);\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, []);\r\n\r\n    const onRemovePost = useCallback(() => {\r\n        dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n        });\r\n    }, []);\r\n\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const liked = post.Likers.find((v) => v.id === id);\r\n    return (\r\n        <div style={{ marginBottom: 20 }}>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    liked\r\n                        ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onUnLike} />\r\n                        : <HeartOutlined key=\"heart\" onClick={onLike} />,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id\r\n                                ? (\r\n                                    <>\r\n                                        <Button>수정</Button>\r\n                                        <Button type=\"danger\" onClick={onRemovePost}\r\n                                            loading={removePostLoading}>삭제</Button>\r\n                                    </>\r\n                                )\r\n                                : <Button>신고</Button>}\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>,\r\n                ]}\r\n                extra={id && <FollowButton post={post} />}\r\n            //extra는 우측상단에 공간을 만들어준다.\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={<PostCardContent postData={post.content} />}\r\n                />\r\n            </Card >\r\n            {commentFormOpened && (\r\n                <div>\r\n                    <CommentForm post={post} />\r\n                    <List\r\n                        header={`${post.Comments.length}개의 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n\r\n\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </div>)}\r\n            {/* <CommentForm /> */}\r\n            {/* <Comments /> */}\r\n        </div >\r\n    )\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createAt: PropTypes.string,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n        Likers: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}