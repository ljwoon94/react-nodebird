{"ast":null,"code":"import produce from 'immer';\nexport var initialState = {\n  removeFollowerLoading: false,\n  //팔로워 차단 가져오기\n  removeFollowerDone: false,\n  removeFollowerError: null,\n  loadMyInfoLoading: false,\n  //유저정보 가져오기\n  loadMyInfoDone: false,\n  loadMyInfoError: null,\n  loadUserLoading: false,\n  // 유저 정보 가져오기 시도중\n  loadUserDone: false,\n  loadUserError: null,\n  followLoading: false,\n  // 팔로우 시도중\n  followDone: false,\n  // 팔로우 유무\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도중\n  unfollowDone: false,\n  // 언팔로우 유무\n  unfollowError: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  // 로그인 유무\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  // 로그아웃 유무\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  //\n  signUpError: null,\n  //\n  loadFollowersLoading: false,\n  // 팔로워 표시 시도중\n  loadFollowersDone: false,\n  //\n  loadFollowersError: null,\n  //\n  loadFollowingsLoading: false,\n  // 팔로잉 표시 시도중\n  loadFollowingsDone: false,\n  //\n  loadFollowingsError: null,\n  //\n  changeNicknameLoading: false,\n  //닉네임 변경 시도중\n  changeNicknameDone: false,\n  //\n  changeNicknameError: null,\n  //\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport var LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport var LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport var REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport var REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport var REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport var LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport var LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport var LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport var LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport var LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport var LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\nexport var LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport var LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport var LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport var CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport var CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport var FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport var FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport var FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport var UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport var UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport var UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport var loginAction = function loginAction(data) {\n  return function (dispatch, getState) {\n    var state = getState();\n    dispatch(loginRequestAction());\n    axios.post('/api/login').then(function (res) {\n      dispatch(loginSuccessAction(res.data));\n    })[\"catch\"](function (err) {\n      dispatch(loginFailureAction(err));\n    });\n  };\n}; //액션 생성기\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction(data) {\n  return {\n    type: LOG_OUT_REQUEST //로그아웃은 데이터가 필요없다.\n\n  };\n}; // const dummyUser = (data) => ({\n//     ...data,\n//     nickname: '쩡운',\n//     id: 1,\n//     Posts: [{ id: 1 }],\n//     Followings: [{ nickname: '오징어' }, { nickname: '명태' }, { nickname: '강아지' }],\n//     Followers: [{ nickname: '오징어' }, { nickname: '명태' }, { nickname: '강아지' }],\n// });\n// reducer은 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(불변성을 지키면서)\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case REMOVE_FOLLOWER_REQUEST:\n        draft.removeFollowerLoading = true;\n        draft.removeFollowerDone = false;\n        draft.removeFollowerError = null;\n        break;\n\n      case REMOVE_FOLLOWER_SUCCESS:\n        draft.removeFollowerLoading = false;\n        draft.removeFollowerDone = true;\n        draft.me.Followers = draft.me.Followers.filter(function (v) {\n          return v.id !== action.data.UserId;\n        });\n\n      case REMOVE_FOLLOWER_FAILURE:\n        draft.removeFollowerLoading = false;\n        draft.removeFollowerError = action.data.error;\n        break;\n\n      case LOAD_FOLLOWERS_REQUEST:\n        draft.loadFollowersLoading = true;\n        draft.loadFollowersDone = false;\n        draft.loadFollowersError = null;\n        break;\n\n      case LOAD_FOLLOWERS_SUCCESS:\n        draft.loadFollowersLoading = false;\n        draft.loadFollowersDone = true;\n        draft.me.Followers = action.data;\n\n      case LOAD_FOLLOWERS_FAILURE:\n        draft.loadFollowersLoading = false;\n        draft.loadFollowersError = action.data.error;\n        break;\n\n      case LOAD_FOLLOWINGS_REQUEST:\n        draft.loadFollowingsLoading = true;\n        draft.loadFollowingsDone = false;\n        draft.loadFollowingsError = null;\n        break;\n\n      case LOAD_FOLLOWINGS_SUCCESS:\n        draft.loadFollowingsLoading = false;\n        draft.loadFollowingsDone = true;\n        draft.me.Followings = action.data;\n        break;\n\n      case LOAD_FOLLOWINGS_FAILURE:\n        draft.loadFollowingsLoading = false;\n        draft.loadFollowingsError = action.data.error;\n        break;\n\n      case LOAD_MY_INFO_REQUEST:\n        draft.loadMyInfoLoading = true;\n        draft.loadMyInfoDone = false;\n        draft.loadMyInfoError = null;\n        break;\n\n      case LOAD_MY_INFO_SUCCESS:\n        draft.loadMyInfoLoading = false;\n        draft.loadMyInfoDone = true;\n        draft.me = action.data;\n        break;\n\n      case LOAD_MY_INFO_FAILURE:\n        draft.loadMyInfoLoading = false;\n        draft.loadMyInfoError = action.data.error;\n        break;\n\n      case LOAD_USER_REQUEST:\n        draft.loadUserLoading = true;\n        draft.loadUserError = null;\n        draft.loadUserDone = false;\n        break;\n\n      case LOAD_USER_SUCCESS:\n        draft.loadUserLoading = false;\n        draft.userInfo = action.data;\n        draft.loadUserDone = true;\n        break;\n\n      case LOAD_USER_FAILURE:\n        draft.loadUserLoading = false;\n        draft.loadUserError = action.error;\n        break;\n\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followDone = false;\n        draft.followError = null;\n        break;\n\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.followDone = true;\n        draft.me.Followings.push({\n          id: action.data.UserId\n        });\n        break;\n\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n\n      case UNFOLLOW_REQUEST:\n        draft.unfollowLoading = true;\n        draft.unfollowDone = false;\n        draft.unfollowError = null;\n        break;\n\n      case UNFOLLOW_SUCCESS:\n        draft.unfollowLoading = false;\n        draft.unfollowDone = true;\n        draft.me.Followings = draft.me.Followings.filter(function (v) {\n          return v.id !== action.data.UserId;\n        });\n        break;\n\n      case UNFOLLOW_FAILURE:\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        break;\n\n      case LOG_IN_REQUEST:\n        console.log('reducer logIn');\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = action.data;\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpDone = false;\n        draft.signUpError = null;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.me.nickname = action.data.nickname;\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n        break;\n      // immer를 사용하면 위에 처럼 줄일 수 있다.\n      // return {\n      //     ...state,\n      //     me: {\n      //         ...state.me,\n      //         Posts: [{ id: action.data }, ...state.me.Posts],\n      //     },\n      // };\n\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n      // immer를 사용하면 위에 처럼 줄일 수 있다.\n      // return {\n      //     ...state,\n      //     me: {\n      //         ...state.me,\n      //         Posts: state.me.Posts.filter((v) => v.id !== action.data),\n      //     },\n      // };\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/reducers/user.js"],"names":["produce","initialState","removeFollowerLoading","removeFollowerDone","removeFollowerError","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","loadUserLoading","loadUserDone","loadUserError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","loadFollowersLoading","loadFollowersDone","loadFollowersError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginAction","data","dispatch","getState","state","loginRequestAction","axios","post","then","res","loginSuccessAction","err","loginFailureAction","type","logoutRequestAction","reducer","action","draft","Followers","filter","v","id","UserId","error","Followings","userInfo","push","console","log","nickname","Posts","unshift"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n    removeFollowerLoading: false, //팔로워 차단 가져오기\r\n    removeFollowerDone: false,\r\n    removeFollowerError: null,\r\n    loadMyInfoLoading: false, //유저정보 가져오기\r\n    loadMyInfoDone: false,\r\n    loadMyInfoError: null,\r\n    loadUserLoading: false, // 유저 정보 가져오기 시도중\r\n    loadUserDone: false,\r\n    loadUserError: null,\r\n    followLoading: false, // 팔로우 시도중\r\n    followDone: false,  // 팔로우 유무\r\n    followError: null,\r\n    unfollowLoading: false, // 언팔로우 시도중\r\n    unfollowDone: false,  // 언팔로우 유무\r\n    unfollowError: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,  // 로그인 유무\r\n    logInError: null,\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false, // 로그아웃 유무\r\n    logOutError: null,\r\n    signUpLoading: false, // 회원가입 시도중\r\n    signUpDone: false,  //\r\n    signUpError: null, //\r\n    loadFollowersLoading: false, // 팔로워 표시 시도중\r\n    loadFollowersDone: false,  //\r\n    loadFollowersError: null, //\r\n    loadFollowingsLoading: false, // 팔로잉 표시 시도중\r\n    loadFollowingsDone: false,  //\r\n    loadFollowingsError: null, //\r\n    changeNicknameLoading: false, //닉네임 변경 시도중\r\n    changeNicknameDone: false,  //\r\n    changeNicknameError: null, //\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nexport const loginAction = (data) => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        dispatch(loginRequestAction());\r\n        axios.post('/api/login')\r\n            .then((res) => {\r\n                dispatch(loginSuccessAction(res.data));\r\n            })\r\n            .catch((err) => {\r\n                dispatch(loginFailureAction(err));\r\n            })\r\n    }\r\n\r\n}\r\n\r\n//액션 생성기\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type: LOG_IN_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logoutRequestAction = (data) => {\r\n    return {\r\n        type: LOG_OUT_REQUEST,\r\n        //로그아웃은 데이터가 필요없다.\r\n    }\r\n}\r\n\r\n// const dummyUser = (data) => ({\r\n//     ...data,\r\n//     nickname: '쩡운',\r\n//     id: 1,\r\n//     Posts: [{ id: 1 }],\r\n//     Followings: [{ nickname: '오징어' }, { nickname: '명태' }, { nickname: '강아지' }],\r\n//     Followers: [{ nickname: '오징어' }, { nickname: '명태' }, { nickname: '강아지' }],\r\n// });\r\n\r\n// reducer은 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(불변성을 지키면서)\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case REMOVE_FOLLOWER_REQUEST:\r\n            draft.removeFollowerLoading = true;\r\n            draft.removeFollowerDone = false;\r\n            draft.removeFollowerError = null;\r\n            break;\r\n        case REMOVE_FOLLOWER_SUCCESS:\r\n            draft.removeFollowerLoading = false;\r\n            draft.removeFollowerDone = true;\r\n            draft.me.Followers = draft.me.Followers.filter((v) => v.id !== action.data.UserId);\r\n        case REMOVE_FOLLOWER_FAILURE:\r\n            draft.removeFollowerLoading = false;\r\n            draft.removeFollowerError = action.data.error;\r\n            break;\r\n\r\n        case LOAD_FOLLOWERS_REQUEST:\r\n            draft.loadFollowersLoading = true;\r\n            draft.loadFollowersDone = false;\r\n            draft.loadFollowersError = null;\r\n            break;\r\n        case LOAD_FOLLOWERS_SUCCESS:\r\n            draft.loadFollowersLoading = false;\r\n            draft.loadFollowersDone = true;\r\n            draft.me.Followers = action.data;\r\n        case LOAD_FOLLOWERS_FAILURE:\r\n            draft.loadFollowersLoading = false;\r\n            draft.loadFollowersError = action.data.error;\r\n            break;\r\n        \r\n        case LOAD_FOLLOWINGS_REQUEST:\r\n            draft.loadFollowingsLoading = true;\r\n            draft.loadFollowingsDone = false;\r\n            draft.loadFollowingsError = null;\r\n            break;\r\n        case LOAD_FOLLOWINGS_SUCCESS:\r\n            draft.loadFollowingsLoading = false;\r\n            draft.loadFollowingsDone = true;\r\n            draft.me.Followings = action.data;\r\n            break;\r\n        case LOAD_FOLLOWINGS_FAILURE:\r\n            draft.loadFollowingsLoading = false;\r\n            draft.loadFollowingsError = action.data.error;\r\n            break;\r\n\r\n        case LOAD_MY_INFO_REQUEST:\r\n            draft.loadMyInfoLoading = true;\r\n            draft.loadMyInfoDone = false;\r\n            draft.loadMyInfoError = null;\r\n            break;\r\n        case LOAD_MY_INFO_SUCCESS:\r\n            draft.loadMyInfoLoading = false;\r\n            draft.loadMyInfoDone = true;\r\n            draft.me = action.data;\r\n            break;\r\n        case LOAD_MY_INFO_FAILURE:\r\n            draft.loadMyInfoLoading = false;\r\n            draft.loadMyInfoError = action.data.error;\r\n            break;\r\n\r\n        case LOAD_USER_REQUEST:\r\n            draft.loadUserLoading = true;\r\n            draft.loadUserError = null;\r\n            draft.loadUserDone = false;\r\n            break;\r\n        case LOAD_USER_SUCCESS:\r\n            draft.loadUserLoading = false;\r\n            draft.userInfo = action.data;\r\n            draft.loadUserDone = true;\r\n            break;\r\n        case LOAD_USER_FAILURE:\r\n            draft.loadUserLoading = false;\r\n            draft.loadUserError = action.error;\r\n            break; \r\n        case FOLLOW_REQUEST:\r\n            draft.followLoading = true;\r\n            draft.followDone = false;\r\n            draft.followError = null;\r\n            break;\r\n        case FOLLOW_SUCCESS:\r\n            draft.followLoading = false;\r\n            draft.followDone = true;\r\n            draft.me.Followings.push({ id: action.data.UserId });\r\n            break;\r\n        case FOLLOW_FAILURE:\r\n            draft.followLoading = false;\r\n            draft.followError = action.error;\r\n            break;\r\n        case UNFOLLOW_REQUEST:\r\n            draft.unfollowLoading = true;\r\n            draft.unfollowDone = false;\r\n            draft.unfollowError = null;\r\n            break;\r\n            \r\n        case UNFOLLOW_SUCCESS:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowDone = true;\r\n            draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId);\r\n            break;\r\n        case UNFOLLOW_FAILURE:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowError = action.error;\r\n            break;\r\n\r\n        case LOG_IN_REQUEST:\r\n            console.log('reducer logIn');\r\n            draft.logInLoading = true;\r\n            draft.logInDone = false;\r\n            draft.logInError = null;\r\n            break;\r\n        case LOG_IN_SUCCESS:\r\n            draft.logInLoading = false;\r\n            draft.logInDone = true;\r\n            draft.me = action.data;\r\n            break;\r\n        case LOG_IN_FAILURE:\r\n            draft.logInLoading = false;\r\n            draft.logInError = action.error;\r\n            break;\r\n\r\n        case LOG_OUT_REQUEST:\r\n            draft.logOutLoading = true;\r\n            draft.logOutDone = false;\r\n            draft.logOutError = null;\r\n            break;\r\n        case LOG_OUT_SUCCESS:\r\n            draft.logOutLoading = false;\r\n            draft.logOutDone = true;\r\n            draft.me = null;\r\n            break;\r\n        case LOG_OUT_FAILURE:\r\n            draft.logOutLoading = false;\r\n            draft.logOutError = action.error;\r\n            break;\r\n\r\n        case SIGN_UP_REQUEST:\r\n            draft.signUpLoading = true;\r\n            draft.signUpDone = false;\r\n            draft.signUpError = null;\r\n            break;\r\n        case SIGN_UP_SUCCESS:\r\n            draft.signUpLoading = false;\r\n            draft.signUpDone = true;\r\n            break;\r\n        case SIGN_UP_FAILURE:\r\n            draft.signUpLoading = false;\r\n            draft.signUpError = action.error;\r\n            break;\r\n\r\n        case CHANGE_NICKNAME_REQUEST:\r\n            draft.changeNicknameLoading = true;\r\n            draft.changeNicknameDone = false;\r\n            draft.changeNicknameError = null;\r\n            break;\r\n        case CHANGE_NICKNAME_SUCCESS:\r\n            draft.me.nickname = action.data.nickname;\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameDone = true;\r\n            break;\r\n        case CHANGE_NICKNAME_FAILURE:\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameError = action.error;\r\n            break;\r\n        case ADD_POST_TO_ME:\r\n            draft.me.Posts.unshift({ id: action.data });\r\n            break;\r\n        // immer를 사용하면 위에 처럼 줄일 수 있다.\r\n        // return {\r\n        //     ...state,\r\n        //     me: {\r\n        //         ...state.me,\r\n        //         Posts: [{ id: action.data }, ...state.me.Posts],\r\n        //     },\r\n        // };\r\n        case REMOVE_POST_OF_ME:\r\n            draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n            break;\r\n        // immer를 사용하면 위에 처럼 줄일 수 있다.\r\n        // return {\r\n        //     ...state,\r\n        //     me: {\r\n        //         ...state.me,\r\n        //         Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n        //     },\r\n        // };\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}