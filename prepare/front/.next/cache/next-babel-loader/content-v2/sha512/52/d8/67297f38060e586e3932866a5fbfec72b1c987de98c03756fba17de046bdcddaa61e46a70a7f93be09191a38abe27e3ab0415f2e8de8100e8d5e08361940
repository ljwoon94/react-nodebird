{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"C:/job/react-nodebird/prepare/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/job/react-nodebird/prepare/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    .ant-row{\\n        margin-right:0!important;\\n        margin-left:0!important;\\n    }\\n    .ant-cool:first-child{\\n        padding-left:0!important;\\n    }\\n    .ant-col:last-child{\\n        padding-right:0!important;\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback } from 'react';\nimport Link from 'next/link'; //next에서 제공하는 Link 컴포넌트\n\nimport { Menu, Input, Row, Col } from 'antd'; // antd는 ant design으로 중국 디자인 사이트\n// Row Col은 반응형 디자인을 만들기 위해 antd에서 지원\n\nimport { useSelector } from 'react-redux'; // react-redux 리액트와 리덕스를 연결해준다.\n\nimport 'antd/dist/antd.css';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Router from 'next/router';\nimport UserProfile from '../components/UserProfile';\nimport LoginForm from '../components/LoginForm';\nimport useInput from '../hooks/useInput';\nvar Global = createGlobalStyle(_templateObject());\nvar SearchInput = styled(Input.Search).withConfig({\n  displayName: \"AppLayout__SearchInput\",\n  componentId: \"sc-1x6xxdo-0\"\n})([\"verticalAlign:'middle';\"]); // 컴포넌트에 스타일을 적용하고 싶을때 style{}를 사용하는것보다\n// styled-components를 사용하는것이 좋다.\n\nvar AppLayout = function AppLayout(_ref) {\n  var children = _ref.children;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      searchInput = _useInput2[0],\n      onChangeSearchInput = _useInput2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var onSearch = useCallback(function () {\n    Router.push(\"/hashtag/\".concat(searchInput));\n  }, [searchInput]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(Global, {}), /*#__PURE__*/_jsxs(Menu, {\n      mode: \"horizontal\",\n      children: [/*#__PURE__*/_jsx(Menu.Item, {\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: \"\\uB178\\uB4DC\\uBC84\\uB4DC\"\n          })\n        })\n      }), /*#__PURE__*/_jsx(Menu.Item, {\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/profile\",\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: \"\\uD504\\uB85C\\uD544\"\n          })\n        })\n      }), /*#__PURE__*/_jsx(Menu.Item, {\n        children: /*#__PURE__*/_jsx(SearchInput, {\n          enterButton: true,\n          value: searchInput,\n          onChange: onChangeSearchInput,\n          onSearch: onSearch\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(Row, {\n      gutter: 8,\n      children: [/*#__PURE__*/_jsx(Col, {\n        xs: 24,\n        md: 6,\n        children: me ? /*#__PURE__*/_jsx(UserProfile, {}) : /*#__PURE__*/_jsx(LoginForm, {})\n      }), /*#__PURE__*/_jsx(Col, {\n        xs: 24,\n        md: 12,\n        children: children\n      }), /*#__PURE__*/_jsx(Col, {\n        xs: 24,\n        md: 6,\n        children: /*#__PURE__*/_jsx(\"a\", {\n          href: \"https://github.com/ljwoon94/react-nodebird\",\n          target: \"_blank\",\n          rel: \"noreferrer noopener\",\n          children: \"Made by JeongWoon Lee\"\n        })\n      })]\n    })]\n  });\n};\n\n// propTypes를 사용하려면 npm i prop-tyoes를 터미널 입력 설치 해야한다.\n// prop검증 기능이 있다. 부모에서 자식에게 물려주는 값을 검증한다.\nexport default AppLayout; // AppLayout 말고 다른 레이아웃을 적용하고 싶으면\n// OtherLayout을 components에 만들어서 해보장","map":null,"metadata":{},"sourceType":"module"}