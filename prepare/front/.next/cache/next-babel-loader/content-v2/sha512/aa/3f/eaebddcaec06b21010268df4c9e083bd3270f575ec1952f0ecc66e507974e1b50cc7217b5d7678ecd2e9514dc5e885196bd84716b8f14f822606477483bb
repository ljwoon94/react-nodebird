{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport reducer from '../reducers';\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMiddleware];\n  var enhancer = true ? compose(applyMiddleware.apply(void 0, middlewares)) //배포용\n  : composeWithDevTools(applyMiddleware.apply(void 0, middlewares)); //개발용\n\n  var store = createStore(reducer, enhancer); //enhancer 미들웨어 액션기록을 보기위해 사용\n  //redux-devtools-extension\n\n  store.sagaTask = sagaMiddleware.run(rootSaga); //sagaTask 서바사이드 렌더링을 하기위해 필요\n\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE === 'development'\n});\nexport default wrapper;","map":null,"metadata":{},"sourceType":"module"}