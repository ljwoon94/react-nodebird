{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\job\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\user\\\\[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\n\nvar User = function User() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadUserPostsLoading = _useSelector.loadUserPostsLoading;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadUserPostsLoading) {\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: id\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, id]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [userInfo && /*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:url\",\n        content: \"https://nodebird.com/user/\".concat(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, _this), userInfo ? /*#__PURE__*/_jsxDEV(Card, {\n      actions: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC9F9\\uC9F9\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, _this), userInfo.Posts]\n      }, \"twit\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC789\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, _this), userInfo.Followings]\n      }, \"following\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC6CC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, _this), userInfo.Followers]\n      }, \"follower\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: userInfo.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, _this),\n        title: userInfo.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, _this) : null, mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 34\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(User, \"IFEddV1bah9PdNsUBoKgoqOI/qI=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector];\n});\n\n_c = User;\nexport var __N_SSP = true;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/pages/user/[id].js"],"names":["React","useEffect","useDispatch","useSelector","Avatar","Card","Head","useRouter","LOAD_USER_POSTS_REQUEST","PostCard","AppLayout","User","dispatch","router","id","query","state","post","mainPosts","hasMorePosts","loadUserPostsLoading","user","userInfo","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","lastId","length","data","addEventListener","removeEventListener","nickname","Posts","Followings","Followers","map"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Avatar, Card } from 'antd';\r\nimport { END } from 'redux-saga';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nconst User = () => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const { mainPosts, hasMorePosts, loadUserPostsLoading } = useSelector((state) => state.post);\r\n    const { userInfo } = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        const onScroll = () => {\r\n        if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n            if (hasMorePosts && !loadUserPostsLoading) {\r\n            dispatch({\r\n                type: LOAD_USER_POSTS_REQUEST,\r\n                lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n                data: id,\r\n            });\r\n            }\r\n        }\r\n        };\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n        window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [mainPosts.length, hasMorePosts, id]);\r\n\r\n    return (\r\n        <AppLayout>\r\n        {userInfo && (\r\n            <Head>\r\n            <title>\r\n                {userInfo.nickname}\r\n                님의 글\r\n            </title>\r\n            <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\r\n            <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\r\n            <meta property=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\r\n            {/* <meta property=\"og:image\" content=\"https://nodebird.com/favicon.ico\" /> */}\r\n            <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`} />\r\n            </Head>\r\n        )}\r\n        {userInfo\r\n            ? (\r\n            <Card\r\n                actions={[\r\n                <div key=\"twit\">\r\n                    짹짹\r\n                    <br />\r\n                    {userInfo.Posts}\r\n                </div>,\r\n                <div key=\"following\">\r\n                    팔로잉\r\n                    <br />\r\n                    {userInfo.Followings}\r\n                </div>,\r\n                <div key=\"follower\">\r\n                    팔로워\r\n                    <br />\r\n                    {userInfo.Followers}\r\n                </div>,\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n                title={userInfo.nickname}\r\n                />\r\n            </Card>\r\n            )\r\n            : null}\r\n        {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_USER_POSTS_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_USER_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n    // console.log('getState', context.store.getState().post.mainPosts);\r\n    // return { props: {} };\r\n});\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}