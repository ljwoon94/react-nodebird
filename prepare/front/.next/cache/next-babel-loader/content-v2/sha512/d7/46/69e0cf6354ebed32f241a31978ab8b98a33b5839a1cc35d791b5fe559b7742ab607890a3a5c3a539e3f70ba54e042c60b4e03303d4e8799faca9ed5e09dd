{"ast":null,"code":"import _defineProperty from \"C:/job/react-nodebird/prepare/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  // 로그인 유무\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  // 로그아웃 유무\n  LOG_OUT_FAILURE: null,\n  signUpLoading: false,\n  //회원가입 시도중\n  signUpDone: false,\n  signUpFailure: flase,\n  //\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport var FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport var FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport var UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport var UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport var UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport var loginAction = function loginAction(data) {\n  return function (dispatch, getState) {\n    var state = getState();\n    dispatch(loginRequestAction());\n    axios.post('/api/login').then(function (res) {\n      dispatch(loginSuccessAction(res.data));\n    })[\"catch\"](function (err) {\n      dispatch(loginFailureAction(err));\n    });\n  };\n}; //액션 생성기\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction(data) {\n  return {\n    type: LOG_OUT_REQUEST //로그아웃은 데이터가 필요없다.\n\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      console.log('reducer logIn');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'JeongWoon'\n        })\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        me: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","LOG_OUT_FAILURE","signUpLoading","signUpDone","signUpFailure","flase","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","loginAction","data","dispatch","getState","state","loginRequestAction","axios","post","then","res","loginSuccessAction","err","loginFailureAction","type","logoutRequestAction","reducer","action","console","log","isLoggingIn","isLoggedIn","nickname","isLoggingOut"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,  // 로그인 유무\r\n    logInError: null,\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false, // 로그아웃 유무\r\n    LOG_OUT_FAILURE: null,\r\n    signUpLoading: false, //회원가입 시도중\r\n    signUpDone: false,\r\n    signUpFailure: flase, //\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n}\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const loginAction = (data) => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        dispatch(loginRequestAction());\r\n        axios.post('/api/login')\r\n            .then((res) => {\r\n                dispatch(loginSuccessAction(res.data));\r\n            })\r\n            .catch((err) => {\r\n                dispatch(loginFailureAction(err));\r\n            })\r\n    }\r\n\r\n}\r\n\r\n//액션 생성기\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type: LOG_IN_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logoutRequestAction = (data) => {\r\n    return {\r\n        type: LOG_OUT_REQUEST,\r\n        //로그아웃은 데이터가 필요없다.\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOG_IN_REQUEST:\r\n            console.log('reducer logIn');\r\n            return {\r\n                ...state,\r\n                isLoggingIn: true,\r\n            };\r\n        case LOG_IN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn: true,\r\n                me: { ...action.data, nickname: 'JeongWoon' },\r\n            };\r\n        case LOG_IN_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn: false,\r\n            };\r\n        case LOG_OUT_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoggingOut: true,\r\n            };\r\n        case LOG_OUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggingOut: false,\r\n                isLoggedIn: false,\r\n                me: null,\r\n            };\r\n        case LOG_OUT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoggingOut: false,\r\n                me: null,\r\n\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}