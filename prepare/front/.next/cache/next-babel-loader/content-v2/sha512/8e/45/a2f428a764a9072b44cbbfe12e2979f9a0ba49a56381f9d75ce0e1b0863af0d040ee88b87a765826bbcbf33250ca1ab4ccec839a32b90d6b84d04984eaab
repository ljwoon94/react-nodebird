{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) //배포용\n  : composeWithDevTools(applyMiddleware(...middlewares)); //개발용\n\n  const store = createStore(reducer, enhancer); //enhancer 미들웨어 액션기록을 보기위해 사용\n  //redux-devtools-extension\n\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE === 'development'\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","wrapper","debug","process","env","NODE"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAGA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAG,QACXL,OAAO,CAACF,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CADI,CAC+B;AAD/B,IAEXH,mBAAmB,CAACH,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CAFzB,CAFyB,CAIoC;;AAC7D,QAAME,KAAK,GAAGP,WAAW,CAACG,OAAD,EAAUG,QAAV,CAAzB,CALyB,CAMzB;AACA;;AACA,SAAOC,KAAP;AACH,CATD;;AAWA,MAAMC,OAAO,GAAGV,aAAa,CAACM,cAAD,EAAiB;AAC1CK,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,IAAZ,KAAqB;AADc,CAAjB,CAA7B;AAGA,eAAeJ,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\r\nimport { applyMiddleware, createStore, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport reducer from '../reducers';\r\n\r\n\r\nconst configureStore = () => {\r\n    const middlewares = [];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))  //배포용\r\n        : composeWithDevTools(applyMiddleware(...middlewares))   //개발용\r\n    const store = createStore(reducer, enhancer);\r\n    //enhancer 미들웨어 액션기록을 보기위해 사용\r\n    //redux-devtools-extension\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE === 'development',\r\n});\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}