{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\nimport axios from 'axios';\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    console.log('saga changeNickname');\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    console.log('saga loadMyInfo');\n    const result = yield call(loadMyInfoAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n    // npm i passport passport-local 로그인를 다루는 미들웨어\n\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  } // 성공결과는 result.data\n  // 실패결과는 err.response.data\n  // put은 디스패치라 생각하면 좋다\n\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    console.log('saga follow');\n    const result = yield call(followAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI);\n    console.log('saga unfollow');\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log('saga logIn');\n    const result = yield call(logInAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n    // npm i passport passport-local 로그인를 다루는 미들웨어\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  } // 성공결과는 result.data\n  // 실패결과는 err.response.data\n  // put은 디스패치라 생각하면 좋다\n\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data); //작동순서 프론트 pages의 onSubmit에 데이터(아이디, 닉네임, 비밀번호)가\n    //SIGNUPREQ 를 통해 리덕스랑 사가 실행, 데이터 함수는 action으로가\n    //signUpAPI의 데이터로 이동 url을 통해 전송\n\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n} // yield take('LOG_IN_REQUEST');은 LOG_IN_REQUEST이 실행될때까지 기다리겠다.\n\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}\n;","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","axios","changeNicknameAPI","data","patch","nickname","changeNickname","action","console","log","result","type","err","error","response","loadMyInfoAPI","get","loadMyInfo","followAPI","post","follow","unfollowAPI","unfollow","logInAPI","logIn","logOutAPI","logOut","signUpAPI","signUp","watchChangeNickname","watchLoadMyInfo","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\r\nimport axios from 'axios';\r\n\r\nfunction changeNicknameAPI(data) {\r\n    return axios.patch('/user/nickname',{nickname: data});\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n    try {\r\n        console.log('saga changeNickname');\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n        \r\n        yield put({\r\n            type: CHANGE_NICKNAME_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: CHANGE_NICKNAME_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo(action) {\r\n    try {\r\n        console.log('saga loadMyInfo');\r\n        const result = yield call(loadMyInfoAPI, action.data);\r\n        //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \r\n        // npm i passport passport-local 로그인를 다루는 미들웨어\r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOAD_MY_INFO_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n\r\n    // 성공결과는 result.data\r\n    // 실패결과는 err.response.data\r\n    // put은 디스패치라 생각하면 좋다\r\n}\r\n\r\nfunction followAPI() {\r\n    return axios.post('/api/follow');\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        console.log('saga follow');\r\n        const result = yield call(followAPI, action.data);\r\n        //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI() {\r\n    return axios.post('/api/unfollow');\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        const result = yield call(unfollowAPI);\r\n        console.log('saga unfollow');\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        console.log('saga logIn');\r\n        const result = yield call(logInAPI, action.data);\r\n        //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \r\n        // npm i passport passport-local 로그인를 다루는 미들웨어\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n\r\n    // 성공결과는 result.data\r\n    // 실패결과는 err.response.data\r\n    // put은 디스패치라 생각하면 좋다\r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/user/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        const result = yield call(signUpAPI, action.data);\r\n        //작동순서 프론트 pages의 onSubmit에 데이터(아이디, 닉네임, 비밀번호)가\r\n        //SIGNUPREQ 를 통해 리덕스랑 사가 실행, 데이터 함수는 action으로가\r\n        //signUpAPI의 데이터로 이동 url을 통해 전송\r\n        console.log(result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* watchChangeNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n// yield take('LOG_IN_REQUEST');은 LOG_IN_REQUEST이 실행될때까지 기다리겠다.\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchChangeNickname),\r\n        fork(watchLoadMyInfo),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ]);\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}