{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from 'immer';\nexport const initialState = {\n  loadMyInfoLoading: false,\n  //유저정보 가져오기\n  loadMyInfoDone: false,\n  loadMyInfoError: null,\n  followLoading: false,\n  // 팔로우 시도중\n  followDone: false,\n  // 팔로우 유무\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도중\n  unfollowDone: false,\n  // 언팔로우 유무\n  unfollowError: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  // 로그인 유무\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  // 로그아웃 유무\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  //\n  signUpError: null,\n  //\n  loadFollowersLoading: false,\n  // 팔로워 표시 시도중\n  loadFollowersDone: false,\n  //\n  loadFollowersError: null,\n  //\n  loadFollowingsLoading: false,\n  // 팔로잉 표시 시도중\n  loadFollowingsDone: false,\n  //\n  loadFollowingsError: null,\n  //\n  changeNicknameLoading: false,\n  //닉네임 변경 시도중\n  changeNicknameDone: false,\n  //\n  changeNicknameError: null,\n  //\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport const loginAction = data => {\n  return (dispatch, getState) => {\n    const state = getState();\n    dispatch(loginRequestAction());\n    axios.post('/api/login').then(res => {\n      dispatch(loginSuccessAction(res.data));\n    }).catch(err => {\n      dispatch(loginFailureAction(err));\n    });\n  };\n}; //액션 생성기\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = data => {\n  return {\n    type: LOG_OUT_REQUEST //로그아웃은 데이터가 필요없다.\n\n  };\n};\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: '쩡운',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: '오징어'\n  }, {\n    nickname: '명태'\n  }, {\n    nickname: '강아지'\n  }],\n  Followers: [{\n    nickname: '오징어'\n  }, {\n    nickname: '명태'\n  }, {\n    nickname: '강아지'\n  }]\n}); // reducer은 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(불변성을 지키면서)\n\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_FOLLOWERS_REQUEST:\n      draft.loadFollowersLoading = true;\n      draft.loadFollowersDone = false;\n      draft.loadFollowersError = null;\n      break;\n\n    case LOAD_FOLLOWERS_SUCCESS:\n      draft.loadFollowersLoading = false;\n      draft.loadFollowersDone = true;\n      draft.me.Followers = action.data;\n      break;\n\n    case LOAD_FOLLOWERS_FAILURE:\n      draft.loadFollowersLoading = false;\n      draft.loadFollowersError = action.data.error;\n      break;\n\n    case LOAD_FOLLOWINGS_REQUEST:\n      draft.loadFollowingsLoading = true;\n      draft.loadFollowingsDone = false;\n      draft.loadFollowingsError = null;\n      break;\n\n    case LOAD_FOLLOWINGS_SUCCESS:\n      draft.loadFollowingsLoading = false;\n      draft.loadFollowingsDone = true;\n      draft.me.Followings = action.data;\n      break;\n\n    case LOAD_FOLLOWINGS_FAILURE:\n      draft.loadFollowingsLoading = false;\n      draft.loadFollowingsError = action.data.error;\n      break;\n\n    case LOAD_MY_INFO_REQUEST:\n      draft.loadMyInfoLoading = true;\n      draft.loadMyInfoDone = false;\n      draft.loadMyInfoError = null;\n      break;\n\n    case LOAD_MY_INFO_SUCCESS:\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoDone = true;\n      draft.me = action.data;\n      break;\n\n    case LOAD_MY_INFO_FAILURE:\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoError = action.data.error;\n      break;\n\n    case FOLLOW_REQUEST:\n      draft.followLoading = true;\n      draft.followDone = false;\n      draft.followError = null;\n      break;\n\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.followDone = true;\n      draft.me.Followings.push({\n        id: action.UserId\n      });\n      break;\n\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      break;\n\n    case UNFOLLOW_REQUEST:\n      draft.unfollowLoading = true;\n      draft.unfollowDone = false;\n      draft.unfollowError = null;\n      break;\n\n    case UNFOLLOW_SUCCESS:\n      draft.unfollowLoading = false;\n      draft.unfollowDone = true;\n      draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data.UserId);\n      break;\n\n    case UNFOLLOW_FAILURE:\n      draft.unfollowLoading = false;\n      draft.unfollowError = action.error;\n      break;\n\n    case LOG_IN_REQUEST:\n      console.log('reducer logIn');\n      draft.logInLoading = true;\n      draft.logInDone = false;\n      draft.logInError = null;\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false;\n      draft.logInDone = true;\n      draft.me = action.data;\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      break;\n\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutDone = false;\n      draft.logOutError = null;\n      break;\n\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      break;\n\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      break;\n\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true;\n      draft.signUpDone = false;\n      draft.signUpError = null;\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false;\n      draft.signUpDone = true;\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.signUpLoading = false;\n      draft.signUpError = action.error;\n      break;\n\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      draft.changeNicknameDone = false;\n      draft.changeNicknameError = null;\n      break;\n\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.me.nickname = action.data.nickname;\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = true;\n      break;\n\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      break;\n\n    case ADD_POST_TO_ME:\n      draft.me.Posts.unshift({\n        id: action.data\n      });\n      break;\n    // immer를 사용하면 위에 처럼 줄일 수 있다.\n    // return {\n    //     ...state,\n    //     me: {\n    //         ...state.me,\n    //         Posts: [{ id: action.data }, ...state.me.Posts],\n    //     },\n    // };\n\n    case REMOVE_POST_OF_ME:\n      draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n      break;\n    // immer를 사용하면 위에 처럼 줄일 수 있다.\n    // return {\n    //     ...state,\n    //     me: {\n    //         ...state.me,\n    //         Posts: state.me.Posts.filter((v) => v.id !== action.data),\n    //     },\n    // };\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/reducers/user.js"],"names":["produce","initialState","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","loadFollowersLoading","loadFollowersDone","loadFollowersError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginAction","data","dispatch","getState","state","loginRequestAction","axios","post","then","res","loginSuccessAction","catch","err","loginFailureAction","type","logoutRequestAction","dummyUser","nickname","id","Posts","Followings","Followers","reducer","action","draft","error","push","UserId","filter","v","console","log","unshift"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n    loadMyInfoLoading: false, //유저정보 가져오기\r\n    loadMyInfoDone: false,\r\n    loadMyInfoError: null,\r\n    followLoading: false, // 팔로우 시도중\r\n    followDone: false,  // 팔로우 유무\r\n    followError: null,\r\n    unfollowLoading: false, // 언팔로우 시도중\r\n    unfollowDone: false,  // 언팔로우 유무\r\n    unfollowError: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,  // 로그인 유무\r\n    logInError: null,\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false, // 로그아웃 유무\r\n    logOutError: null,\r\n    signUpLoading: false, // 회원가입 시도중\r\n    signUpDone: false,  //\r\n    signUpError: null, //\r\n    loadFollowersLoading: false, // 팔로워 표시 시도중\r\n    loadFollowersDone: false,  //\r\n    loadFollowersError: null, //\r\n    loadFollowingsLoading: false, // 팔로잉 표시 시도중\r\n    loadFollowingsDone: false,  //\r\n    loadFollowingsError: null, //\r\n    changeNicknameLoading: false, //닉네임 변경 시도중\r\n    changeNicknameDone: false,  //\r\n    changeNicknameError: null, //\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nexport const loginAction = (data) => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        dispatch(loginRequestAction());\r\n        axios.post('/api/login')\r\n            .then((res) => {\r\n                dispatch(loginSuccessAction(res.data));\r\n            })\r\n            .catch((err) => {\r\n                dispatch(loginFailureAction(err));\r\n            })\r\n    }\r\n\r\n}\r\n\r\n//액션 생성기\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type: LOG_IN_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logoutRequestAction = (data) => {\r\n    return {\r\n        type: LOG_OUT_REQUEST,\r\n        //로그아웃은 데이터가 필요없다.\r\n    }\r\n}\r\n\r\nconst dummyUser = (data) => ({\r\n    ...data,\r\n    nickname: '쩡운',\r\n    id: 1,\r\n    Posts: [{ id: 1 }],\r\n    Followings: [{ nickname: '오징어' }, { nickname: '명태' }, { nickname: '강아지' }],\r\n    Followers: [{ nickname: '오징어' }, { nickname: '명태' }, { nickname: '강아지' }],\r\n});\r\n\r\n// reducer은 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(불변성을 지키면서)\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case LOAD_FOLLOWERS_REQUEST:\r\n            draft.loadFollowersLoading = true;\r\n            draft.loadFollowersDone = false;\r\n            draft.loadFollowersError = null;\r\n            break;\r\n        case LOAD_FOLLOWERS_SUCCESS:\r\n            draft.loadFollowersLoading = false;\r\n            draft.loadFollowersDone = true;\r\n            draft.me.Followers = action.data;\r\n            break;\r\n        case LOAD_FOLLOWERS_FAILURE:\r\n            draft.loadFollowersLoading = false;\r\n            draft.loadFollowersError = action.data.error;\r\n            break;\r\n        \r\n        case LOAD_FOLLOWINGS_REQUEST:\r\n            draft.loadFollowingsLoading = true;\r\n            draft.loadFollowingsDone = false;\r\n            draft.loadFollowingsError = null;\r\n            break;\r\n        case LOAD_FOLLOWINGS_SUCCESS:\r\n            draft.loadFollowingsLoading = false;\r\n            draft.loadFollowingsDone = true;\r\n            draft.me.Followings = action.data;\r\n            break;\r\n        case LOAD_FOLLOWINGS_FAILURE:\r\n            draft.loadFollowingsLoading = false;\r\n            draft.loadFollowingsError = action.data.error;\r\n            break;\r\n\r\n        case LOAD_MY_INFO_REQUEST:\r\n            draft.loadMyInfoLoading = true;\r\n            draft.loadMyInfoDone = false;\r\n            draft.loadMyInfoError = null;\r\n            break;\r\n        case LOAD_MY_INFO_SUCCESS:\r\n            draft.loadMyInfoLoading = false;\r\n            draft.loadMyInfoDone = true;\r\n            draft.me = action.data;\r\n            break;\r\n        case LOAD_MY_INFO_FAILURE:\r\n            draft.loadMyInfoLoading = false;\r\n            draft.loadMyInfoError = action.data.error;\r\n            break;\r\n        \r\n        case FOLLOW_REQUEST:\r\n            draft.followLoading = true;\r\n            draft.followDone = false;\r\n            draft.followError = null;\r\n            break;\r\n        case FOLLOW_SUCCESS:\r\n            draft.followLoading = false;\r\n            draft.followDone = true;\r\n            draft.me.Followings.push({ id: action.UserId });\r\n            break;\r\n        case FOLLOW_FAILURE:\r\n            draft.followLoading = false;\r\n            draft.followError = action.error;\r\n            break;\r\n        case UNFOLLOW_REQUEST:\r\n            draft.unfollowLoading = true;\r\n            draft.unfollowDone = false;\r\n            draft.unfollowError = null;\r\n            break;\r\n        case UNFOLLOW_SUCCESS:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowDone = true;\r\n            draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId);\r\n            break;\r\n        case UNFOLLOW_FAILURE:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowError = action.error;\r\n            break;\r\n\r\n        case LOG_IN_REQUEST:\r\n            console.log('reducer logIn');\r\n            draft.logInLoading = true;\r\n            draft.logInDone = false;\r\n            draft.logInError = null;\r\n            break;\r\n        case LOG_IN_SUCCESS:\r\n            draft.logInLoading = false;\r\n            draft.logInDone = true;\r\n            draft.me = action.data;\r\n            break;\r\n        case LOG_IN_FAILURE:\r\n            draft.logInLoading = false;\r\n            draft.logInError = action.error;\r\n            break;\r\n\r\n        case LOG_OUT_REQUEST:\r\n            draft.logOutLoading = true;\r\n            draft.logOutDone = false;\r\n            draft.logOutError = null;\r\n            break;\r\n        case LOG_OUT_SUCCESS:\r\n            draft.logOutLoading = false;\r\n            draft.logOutDone = true;\r\n            draft.me = null;\r\n            break;\r\n        case LOG_OUT_FAILURE:\r\n            draft.logOutLoading = false;\r\n            draft.logOutError = action.error;\r\n            break;\r\n\r\n        case SIGN_UP_REQUEST:\r\n            draft.signUpLoading = true;\r\n            draft.signUpDone = false;\r\n            draft.signUpError = null;\r\n            break;\r\n        case SIGN_UP_SUCCESS:\r\n            draft.signUpLoading = false;\r\n            draft.signUpDone = true;\r\n            break;\r\n        case SIGN_UP_FAILURE:\r\n            draft.signUpLoading = false;\r\n            draft.signUpError = action.error;\r\n            break;\r\n\r\n        case CHANGE_NICKNAME_REQUEST:\r\n            draft.changeNicknameLoading = true;\r\n            draft.changeNicknameDone = false;\r\n            draft.changeNicknameError = null;\r\n            break;\r\n        case CHANGE_NICKNAME_SUCCESS:\r\n            draft.me.nickname = action.data.nickname;\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameDone = true;\r\n            break;\r\n        case CHANGE_NICKNAME_FAILURE:\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameError = action.error;\r\n            break;\r\n        case ADD_POST_TO_ME:\r\n            draft.me.Posts.unshift({ id: action.data });\r\n            break;\r\n        // immer를 사용하면 위에 처럼 줄일 수 있다.\r\n        // return {\r\n        //     ...state,\r\n        //     me: {\r\n        //         ...state.me,\r\n        //         Posts: [{ id: action.data }, ...state.me.Posts],\r\n        //     },\r\n        // };\r\n        case REMOVE_POST_OF_ME:\r\n            draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n            break;\r\n        // immer를 사용하면 위에 처럼 줄일 수 있다.\r\n        // return {\r\n        //     ...state,\r\n        //     me: {\r\n        //         ...state.me,\r\n        //         Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n        //     },\r\n        // };\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}