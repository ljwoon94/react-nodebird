{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n// post/[id]sms\n// post[1], post[2], post[3] 순서대로 올라감\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport wrapper from '../../store/configureStore';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\n\nconst Post = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    id\n  } = router.query; // return (\n  //     <AppLayout>\n  //         <PostCard post={singlePost} />\n  //     </AppLayout>\n  // );\n\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:title\",\n        content: `${singlePost.User.nickname}님의 게시글`\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:url\",\n        content: `https://nodebird.com/post/${id}`\n      })]\n    }), /*#__PURE__*/_jsx(PostCard, {\n      post: singlePost\n    })]\n  });\n}; // // export async function getStaticPaths() {\n// //   return {\n// //     paths: [\n// //       { params: { id: '1' } },\n// //       { params: { id: '2' } },\n// //       { params: { id: '3' } },\n// //       { params: { id: '4' } },\n// //     ],\n// //     fallback: true,\n// //   };\n// // }\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  console.log(context);\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  return {\n    props: {}\n  };\n});\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}