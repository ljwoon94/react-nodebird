{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Router from 'next/router';\nimport AppLayout from '../components/AppLayout';\nimport Head from 'next/head';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\nimport useInput from '../hooks/useInput';\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_REQUEST } from '../reducers/user';\nimport { useDispatch, useSelector } from 'react-redux';\nconst ErrorMessage = styled.div.withConfig({\n  displayName: \"signup__ErrorMessage\",\n  componentId: \"sc-1oeks01-0\"\n})([\"color:red;\"]);\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const {\n    signUpLoading,\n    signUpDone,\n    signUpError,\n    me\n  } = useSelector(state => state.user);\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput(''); // 커스텀 훅으로 중복되는 내용 최소화 /hooks/useInput.js\n  // const [id, setId] = useState('');\n  // const onChangeId = useCallback((e) => {\n  //     setId(e.target.value);\n  // }, []);\n\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace('/'); //이전 페이지로 돌아가기\n    }\n  }, [me && me.id]);\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  const {\n    0: term,\n    1: setTerm\n  } = useState('');\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, [password]);\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log(email, nickname, password);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        password,\n        nickname\n      }\n    });\n  }, [email, password, passwordCheck, term]);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uD398\\uC774\\uC9C0 | NodeBird\"\n      })\n    }), /*#__PURE__*/_jsxs(Form, {\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-email\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-email\",\n          type: \"email\",\n          value: email,\n          onChange: onChangeEmail,\n          required: true\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-nick\",\n          children: \"\\uB2C9\\uB124\\uC784\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-nick\",\n          value: nickname,\n          onChange: onChangeNickname,\n          required: true\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: password,\n          onChange: onChangePassword,\n          required: true\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-password-check\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCCB4\\uD06C\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-password-check\",\n          type: \"password\",\n          value: passwordCheck,\n          required: true,\n          onChange: onChangePasswordCheck\n        }), passwordError && /*#__PURE__*/_jsx(ErrorMessage, {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Checkbox, {\n          name: \"user-term\",\n          checked: term,\n          onChange: onChangeTerm,\n          children: \"\\uC798 \\uD560 \\uAC83\\uC744 \\uB3D9\\uC758 \\uD569\\uB2C8\\uB2E4.\"\n        }), termError && /*#__PURE__*/_jsx(ErrorMessage, {\n          children: \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C\\uD569\\uB2C8\\uB2E4.\"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: /*#__PURE__*/_jsx(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: signUpLoading,\n          children: \"\\uAC00\\uC785\"\n        })\n      })]\n    })]\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log('getServerSideProps start');\n  console.log(context.req.headers);\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  console.log('getServerSideProps end');\n  await context.store.sagaTask.toPromise();\n}); // 서버사이드 렌더링\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}