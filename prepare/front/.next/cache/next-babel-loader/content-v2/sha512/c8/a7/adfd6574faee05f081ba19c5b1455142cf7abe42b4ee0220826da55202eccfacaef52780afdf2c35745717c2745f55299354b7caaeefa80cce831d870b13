{"ast":null,"code":"import _defineProperty from \"C:/job/react-nodebird/prepare/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"./post\";\nimport produce from 'immer';\nexport var initialState = {\n  followLoading: false,\n  // 팔로우 시도중\n  followDone: false,\n  // 팔로우 유무\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도중\n  unfollowDone: false,\n  // 언팔로우 유무\n  unfollowError: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  // 로그인 유무\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  // 로그아웃 유무\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  //\n  signUpError: null,\n  //\n  changeNicknameLoading: false,\n  //닉네임 변경 시도중\n  changeNicknameDone: false,\n  //\n  changeNicknameError: null,\n  //\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport var CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport var CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport var FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport var FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport var FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport var UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport var UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport var UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport var loginAction = function loginAction(data) {\n  return function (dispatch, getState) {\n    var state = getState();\n    dispatch(loginRequestAction());\n    axios.post('/api/login').then(function (res) {\n      dispatch(loginSuccessAction(res.data));\n    })[\"catch\"](function (err) {\n      dispatch(loginFailureAction(err));\n    });\n  };\n}; //액션 생성기\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction(data) {\n  return {\n    type: LOG_OUT_REQUEST //로그아웃은 데이터가 필요없다.\n\n  };\n};\n\nvar dummyUser = function dummyUser(data) {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: '쩡운',\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [{\n      nickname: '오징어'\n    }, {\n      nickname: '명태'\n    }, {\n      nickname: '강아지'\n    }],\n    Followers: [{\n      nickname: '오징어'\n    }, {\n      nickname: '명태'\n    }, {\n      nickname: '강아지'\n    }]\n  });\n}; // reducer은 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(불변성을 지키면서)\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case FOLLOW_REQUEST:\n        console.log('reducer logIn');\n        draft.followLoading = true;\n        draft.followDone = false;\n        draft.followError = null;\n        break;\n\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.followDone = true;\n        draft.me.Followings.push({\n          id: action.data\n        });\n        break;\n\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n\n      case UNFOLLOW_REQUEST:\n        console.log('reducer logIn');\n        draft.unfollowLoading = true;\n        draft.unfollowDone = false;\n        draft.unfollowError = null;\n        break;\n\n      case UNFOLLOW_SUCCESS:\n        draft.unfollowLoading = false;\n        draft.unfollowDone = true;\n        draft.me.Followings = draft.me.Followings.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case UNFOLLOW_FAILURE:\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        break;\n\n      case LOG_IN_REQUEST:\n        console.log('reducer logIn');\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpDone = false;\n        draft.signUpError = null;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknamepDone = false;\n        draft.changeNicknameError = null;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n        break;\n      // immer를 사용하면 위에 처럼 줄일 수 있다.\n      // return {\n      //     ...state,\n      //     me: {\n      //         ...state.me,\n      //         Posts: [{ id: action.data }, ...state.me.Posts],\n      //     },\n      // };\n\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n      // immer를 사용하면 위에 처럼 줄일 수 있다.\n      // return {\n      //     ...state,\n      //     me: {\n      //         ...state.me,\n      //         Posts: state.me.Posts.filter((v) => v.id !== action.data),\n      //     },\n      // };\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/reducers/user.js"],"names":["ADD_POST_TO_ME","REMOVE_POST_OF_ME","produce","initialState","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","loginAction","data","dispatch","getState","state","loginRequestAction","axios","post","then","res","loginSuccessAction","err","loginFailureAction","type","logoutRequestAction","dummyUser","nickname","id","Posts","Followings","Followers","reducer","action","draft","console","log","push","error","filter","v","changeNicknamepDone","unshift"],"mappings":"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","sourcesContent":["import { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"./post\";\r\nimport produce from 'immer';\r\n\r\nexport const initialState = {\r\n    followLoading: false, // 팔로우 시도중\r\n    followDone: false,  // 팔로우 유무\r\n    followError: null,\r\n    unfollowLoading: false, // 언팔로우 시도중\r\n    unfollowDone: false,  // 언팔로우 유무\r\n    unfollowError: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,  // 로그인 유무\r\n    logInError: null,\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false, // 로그아웃 유무\r\n    logOutError: null,\r\n    signUpLoading: false, // 회원가입 시도중\r\n    signUpDone: false,  //\r\n    signUpError: null, //\r\n    changeNicknameLoading: false, //닉네임 변경 시도중\r\n    changeNicknameDone: false,  //\r\n    changeNicknameError: null, //\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\n\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const loginAction = (data) => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        dispatch(loginRequestAction());\r\n        axios.post('/api/login')\r\n            .then((res) => {\r\n                dispatch(loginSuccessAction(res.data));\r\n            })\r\n            .catch((err) => {\r\n                dispatch(loginFailureAction(err));\r\n            })\r\n    }\r\n\r\n}\r\n\r\n//액션 생성기\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type: LOG_IN_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logoutRequestAction = (data) => {\r\n    return {\r\n        type: LOG_OUT_REQUEST,\r\n        //로그아웃은 데이터가 필요없다.\r\n    }\r\n}\r\n\r\nconst dummyUser = (data) => ({\r\n    ...data,\r\n    nickname: '쩡운',\r\n    id: 1,\r\n    Posts: [{ id: 1 }],\r\n    Followings: [{ nickname: '오징어' }, { nickname: '명태' }, { nickname: '강아지' }],\r\n    Followers: [{ nickname: '오징어' }, { nickname: '명태' }, { nickname: '강아지' }],\r\n});\r\n\r\n// reducer은 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(불변성을 지키면서)\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case FOLLOW_REQUEST:\r\n            console.log('reducer logIn');\r\n            draft.followLoading = true;\r\n            draft.followDone = false;\r\n            draft.followError = null;\r\n            break;\r\n        case FOLLOW_SUCCESS:\r\n            draft.followLoading = false;\r\n            draft.followDone = true;\r\n            draft.me.Followings.push({ id: action.data });\r\n            break;\r\n        case FOLLOW_FAILURE:\r\n            draft.followLoading = false;\r\n            draft.followError = action.error;\r\n            break;\r\n\r\n        case UNFOLLOW_REQUEST:\r\n            console.log('reducer logIn');\r\n            draft.unfollowLoading = true;\r\n            draft.unfollowDone = false;\r\n            draft.unfollowError = null;\r\n            break;\r\n        case UNFOLLOW_SUCCESS:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowDone = true;\r\n            draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data);\r\n            break;\r\n        case UNFOLLOW_FAILURE:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowError = action.error;\r\n            break;\r\n\r\n        case LOG_IN_REQUEST:\r\n            console.log('reducer logIn');\r\n            draft.logInLoading = true;\r\n            draft.logInDone = false;\r\n            draft.logInError = null;\r\n            break;\r\n        case LOG_IN_SUCCESS:\r\n            draft.logInLoading = false;\r\n            draft.logInDone = true;\r\n            draft.me = dummyUser(action.data);\r\n            break;\r\n        case LOG_IN_FAILURE:\r\n            draft.logInLoading = false;\r\n            draft.logInError = action.error;\r\n            break;\r\n\r\n        case LOG_OUT_REQUEST:\r\n            draft.logOutLoading = true;\r\n            draft.logOutDone = false;\r\n            draft.logOutError = null;\r\n            break;\r\n        case LOG_OUT_SUCCESS:\r\n            draft.logOutLoading = false;\r\n            draft.logOutDone = true;\r\n            draft.me = null;\r\n            break;\r\n        case LOG_OUT_FAILURE:\r\n            draft.logOutLoading = false;\r\n            draft.logOutError = action.error;\r\n            break;\r\n\r\n        case SIGN_UP_REQUEST:\r\n            draft.signUpLoading = true;\r\n            draft.signUpDone = false;\r\n            draft.signUpError = null;\r\n            break;\r\n        case SIGN_UP_SUCCESS:\r\n            draft.signUpLoading = false;\r\n            draft.signUpDone = true;\r\n            break;\r\n        case SIGN_UP_FAILURE:\r\n            draft.signUpLoading = false;\r\n            draft.signUpError = action.error;\r\n            break;\r\n\r\n        case CHANGE_NICKNAME_REQUEST:\r\n            draft.changeNicknameLoading = true;\r\n            draft.changeNicknamepDone = false;\r\n            draft.changeNicknameError = null;\r\n            break;\r\n        case CHANGE_NICKNAME_SUCCESS:\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameDone = true;\r\n            break;\r\n        case CHANGE_NICKNAME_FAILURE:\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameError = action.error;\r\n            break;\r\n        case ADD_POST_TO_ME:\r\n            draft.me.Posts.unshift({ id: action.data });\r\n            break;\r\n        // immer를 사용하면 위에 처럼 줄일 수 있다.\r\n        // return {\r\n        //     ...state,\r\n        //     me: {\r\n        //         ...state.me,\r\n        //         Posts: [{ id: action.data }, ...state.me.Posts],\r\n        //     },\r\n        // };\r\n        case REMOVE_POST_OF_ME:\r\n            draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n            break;\r\n        // immer를 사용하면 위에 처럼 줄일 수 있다.\r\n        // return {\r\n        //     ...state,\r\n        //     me: {\r\n        //         ...state.me,\r\n        //         Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n        //     },\r\n        // };\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}