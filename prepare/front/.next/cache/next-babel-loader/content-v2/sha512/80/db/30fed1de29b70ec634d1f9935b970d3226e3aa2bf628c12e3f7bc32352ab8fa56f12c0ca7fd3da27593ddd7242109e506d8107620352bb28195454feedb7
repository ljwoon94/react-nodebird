{"ast":null,"code":"import { all, delay, fork, take } from \"redux-saga/effects\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from \"../reducers/post\";\n\nfunction addPostAPI(data) {\n  return axios.post('/api/addPost', data);\n}\n\nfunction* addPost(action) {\n  try {\n    //const result = yield call(addPostAPI, action.data);\n    console.log('saga post');\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    //const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield take(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield take(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/sagas/post.js"],"names":["all","delay","fork","take","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPostAPI","data","axios","post","addPost","action","console","log","put","type","err","response","addCommentAPI","postId","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,IAA3B,QAAuC,oBAAvC;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,mBAAnD,EAAwEC,gBAAxE,EAA0FC,gBAA1F,EAA4GC,gBAA5G,QAAqI,kBAArI;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,cAAX,EAA2BF,IAA3B,CAAP;AACH;;AAED,UAAUG,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,UAAMhB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMiB,GAAG,CAAC;AACNC,MAAAA,IAAI,EAAEV,gBADA;AAENE,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GARD,CAQE,OAAOS,GAAP,EAAY;AACV,UAAMF,GAAG,CAAC;AACNC,MAAAA,IAAI,EAAEZ,gBADA;AAENI,MAAAA,IAAI,EAAES,GAAG,CAACC,QAAJ,CAAaV;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,SAASW,aAAT,CAAuBX,IAAvB,EAA6B;AACzB,SAAOC,KAAK,CAACC,IAAN,CAAY,aAAYF,IAAI,CAACY,MAAO,UAApC,EAA+CZ,IAA/C,CAAP;AACH;;AAED,UAAUa,UAAV,CAAqBT,MAArB,EAA6B;AACzB,MAAI;AACA;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAMiB,GAAG,CAAC;AACNC,MAAAA,IAAI,EAAEb;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAOc,GAAP,EAAY;AACV,UAAMF,GAAG,CAAC;AACNC,MAAAA,IAAI,EAAEf,mBADA;AAENO,MAAAA,IAAI,EAAES,GAAG,CAACC,QAAJ,CAAaV;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUc,YAAV,GAAyB;AACrB,QAAMtB,IAAI,CAACK,gBAAD,EAAmBM,OAAnB,CAAV;AACH;;AAED,UAAUY,eAAV,GAA4B;AACxB,QAAMvB,IAAI,CAACE,mBAAD,EAAsBmB,UAAtB,CAAV;AACH;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAM3B,GAAG,CAAC,CACNE,IAAI,CAACuB,YAAD,CADE,EAENvB,IAAI,CAACwB,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, delay, fork, take } from \"redux-saga/effects\";\r\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, } from \"../reducers/post\";\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/addPost', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        //const result = yield call(addPostAPI, action.data);\r\n        console.log('saga post');\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/api/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        //const result = yield call(addPostAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield take(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield take(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}