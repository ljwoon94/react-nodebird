{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\nimport axios from 'axios';\n\nfunction removeFollowerAPI(data) {\n  return axios.get('/user/followers', data);\n}\n\nfunction* removeFollower(action) {\n  try {\n    console.log('saga removeFollower');\n    const result = yield call(removeFollowerAPI, action.data);\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get('/user/followers', data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    console.log('saga loadFollowers');\n    const result = yield call(loadFollowersAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.get('/user/followings', data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    console.log('saga loadFollowings');\n    const result = yield call(loadFollowingsAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    console.log('saga changeNickname');\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    console.log('saga loadMyInfo');\n    const result = yield call(loadMyInfoAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n    // npm i passport passport-local 로그인를 다루는 미들웨어\n\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  } // 성공결과는 result.data\n  // 실패결과는 err.response.data\n  // put은 디스패치라 생각하면 좋다\n\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    console.log('saga follow');\n    const result = yield call(followAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    console.log('saga unfollow');\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log('saga logIn');\n    const result = yield call(logInAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n    // npm i passport passport-local 로그인를 다루는 미들웨어\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  } // 성공결과는 result.data\n  // 실패결과는 err.response.data\n  // put은 디스패치라 생각하면 좋다\n\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data); //작동순서 프론트 pages의 onSubmit에 데이터(아이디, 닉네임, 비밀번호)가\n    //SIGNUPREQ 를 통해 리덕스랑 사가 실행, 데이터 함수는 action으로가\n    //signUpAPI의 데이터로 이동 url을 통해 전송\n\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n} // yield take('LOG_IN_REQUEST');은 LOG_IN_REQUEST이 실행될때까지 기다리겠다.\n\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchRemoveFollower), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}\n;","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","REMOVE_FOLLOWER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","axios","removeFollowerAPI","data","get","removeFollower","action","console","log","result","type","err","error","response","loadFollowersAPI","loadFollowers","loadFollowingsAPI","loadFollowings","changeNicknameAPI","patch","nickname","changeNickname","loadMyInfoAPI","loadMyInfo","followAPI","follow","unfollowAPI","delete","unfollow","logInAPI","post","logIn","logOutAPI","logOut","signUpAPI","signUp","watchRemoveFollower","watchLoadFollowers","watchLoadFollowings","watchChangeNickname","watchLoadMyInfo","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\r\nimport axios from 'axios';\r\n\r\nfunction removeFollowerAPI(data) {\r\n    return axios.get('/user/followers', data);\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n    try {\r\n        console.log('saga removeFollower');\r\n        const result = yield call(removeFollowerAPI, action.data);\r\n        \r\n        yield put({\r\n            type: REMOVE_FOLLOWER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadFollowersAPI(data) {\r\n    return axios.get('/user/followers', data);\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n    try {\r\n        console.log('saga loadFollowers');\r\n        const result = yield call(loadFollowersAPI, action.data);\r\n        \r\n        yield put({\r\n            type: LOAD_FOLLOWERS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n    return axios.get('/user/followings', data);\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n    try {\r\n        console.log('saga loadFollowings');\r\n        const result = yield call(loadFollowingsAPI, action.data);\r\n        \r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n    return axios.patch('/user/nickname',{nickname: data});\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n    try {\r\n        console.log('saga changeNickname');\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n        \r\n        yield put({\r\n            type: CHANGE_NICKNAME_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: CHANGE_NICKNAME_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo(action) {\r\n    try {\r\n        console.log('saga loadMyInfo');\r\n        const result = yield call(loadMyInfoAPI, action.data);\r\n        //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \r\n        // npm i passport passport-local 로그인를 다루는 미들웨어\r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOAD_MY_INFO_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n\r\n    // 성공결과는 result.data\r\n    // 실패결과는 err.response.data\r\n    // put은 디스패치라 생각하면 좋다\r\n}\r\n\r\nfunction followAPI(data) {\r\n    return axios.patch(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        console.log('saga follow');\r\n        const result = yield call(followAPI, action.data);\r\n        //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.delete(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        const result = yield call(unfollowAPI, action.data);\r\n        console.log('saga unfollow');\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        console.log('saga logIn');\r\n        const result = yield call(logInAPI, action.data);\r\n        //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \r\n        // npm i passport passport-local 로그인를 다루는 미들웨어\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n\r\n    // 성공결과는 result.data\r\n    // 실패결과는 err.response.data\r\n    // put은 디스패치라 생각하면 좋다\r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/user/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        const result = yield call(signUpAPI, action.data);\r\n        //작동순서 프론트 pages의 onSubmit에 데이터(아이디, 닉네임, 비밀번호)가\r\n        //SIGNUPREQ 를 통해 리덕스랑 사가 실행, 데이터 함수는 action으로가\r\n        //signUpAPI의 데이터로 이동 url을 통해 전송\r\n        console.log(result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction* watchRemoveFollower() {\r\n    yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\nfunction* watchLoadFollowers() {\r\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\nfunction* watchLoadFollowings() {\r\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\nfunction* watchChangeNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n// yield take('LOG_IN_REQUEST');은 LOG_IN_REQUEST이 실행될때까지 기다리겠다.\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchRemoveFollower),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n        fork(watchChangeNickname),\r\n        fork(watchLoadMyInfo),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ]);\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}