{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\nimport axios from 'axios';\n\nfunction loadFollowersAPI(data) {\n  return axios.get('/user/follwers', data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    console.log('saga loadFollowers');\n    const result = yield call(loadFollowersAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.get('/user/followings', data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    console.log('saga loadFollowings');\n    const result = yield call(loadFollowingsAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    console.log('saga changeNickname');\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    console.log('saga loadMyInfo');\n    const result = yield call(loadMyInfoAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n    // npm i passport passport-local 로그인를 다루는 미들웨어\n\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  } // 성공결과는 result.data\n  // 실패결과는 err.response.data\n  // put은 디스패치라 생각하면 좋다\n\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    console.log('saga follow');\n    const result = yield call(followAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    console.log('saga unfollow');\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log('saga logIn');\n    const result = yield call(logInAPI, action.data); //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \n    // npm i passport passport-local 로그인를 다루는 미들웨어\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  } // 성공결과는 result.data\n  // 실패결과는 err.response.data\n  // put은 디스패치라 생각하면 좋다\n\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data); //작동순서 프론트 pages의 onSubmit에 데이터(아이디, 닉네임, 비밀번호)가\n    //SIGNUPREQ 를 통해 리덕스랑 사가 실행, 데이터 함수는 action으로가\n    //signUpAPI의 데이터로 이동 url을 통해 전송\n\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n} // yield take('LOG_IN_REQUEST');은 LOG_IN_REQUEST이 실행될때까지 기다리겠다.\n\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}\n;","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","axios","loadFollowersAPI","data","get","loadFollowers","action","console","log","result","type","err","error","response","loadFollowingsAPI","loadFollowings","changeNicknameAPI","patch","nickname","changeNickname","loadMyInfoAPI","loadMyInfo","followAPI","follow","unfollowAPI","delete","unfollow","logInAPI","post","logIn","logOutAPI","logOut","signUpAPI","signUp","watchLoadFollowers","watchLoadFollowings","watchChangeNickname","watchLoadMyInfo","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\r\nimport axios from 'axios';\r\n\r\nfunction loadFollowersAPI(data) {\r\n    return axios.get('/user/follwers', data);\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n    try {\r\n        console.log('saga loadFollowers');\r\n        const result = yield call(loadFollowersAPI, action.data);\r\n        \r\n        yield put({\r\n            type: LOAD_FOLLOWERS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n    return axios.get('/user/followings', data);\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n    try {\r\n        console.log('saga loadFollowings');\r\n        const result = yield call(loadFollowingsAPI, action.data);\r\n        \r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n    return axios.patch('/user/nickname',{nickname: data});\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n    try {\r\n        console.log('saga changeNickname');\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n        \r\n        yield put({\r\n            type: CHANGE_NICKNAME_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: CHANGE_NICKNAME_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo(action) {\r\n    try {\r\n        console.log('saga loadMyInfo');\r\n        const result = yield call(loadMyInfoAPI, action.data);\r\n        //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \r\n        // npm i passport passport-local 로그인를 다루는 미들웨어\r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOAD_MY_INFO_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n\r\n    // 성공결과는 result.data\r\n    // 실패결과는 err.response.data\r\n    // put은 디스패치라 생각하면 좋다\r\n}\r\n\r\nfunction followAPI(data) {\r\n    return axios.patch(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        console.log('saga follow');\r\n        const result = yield call(followAPI, action.data);\r\n        //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.delete(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        const result = yield call(unfollowAPI, action.data);\r\n        console.log('saga unfollow');\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        console.log('saga logIn');\r\n        const result = yield call(logInAPI, action.data);\r\n        //() 인자엔 첫번째는 함수 그 인후론 매게변수들 넣음. \r\n        // npm i passport passport-local 로그인를 다루는 미들웨어\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n\r\n    // 성공결과는 result.data\r\n    // 실패결과는 err.response.data\r\n    // put은 디스패치라 생각하면 좋다\r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/user/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        const result = yield call(signUpAPI, action.data);\r\n        //작동순서 프론트 pages의 onSubmit에 데이터(아이디, 닉네임, 비밀번호)가\r\n        //SIGNUPREQ 를 통해 리덕스랑 사가 실행, 데이터 함수는 action으로가\r\n        //signUpAPI의 데이터로 이동 url을 통해 전송\r\n        console.log(result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\nfunction* watchLoadFollowings() {\r\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\nfunction* watchChangeNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n// yield take('LOG_IN_REQUEST');은 LOG_IN_REQUEST이 실행될때까지 기다리겠다.\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n        fork(watchChangeNickname),\r\n        fork(watchLoadMyInfo),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ]);\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}