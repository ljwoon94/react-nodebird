{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\job\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\AppLayout.js\";\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link'; //next에서 제공하는 Link 컴포넌트\n\nimport { Menu, Input, Row, Col } from 'antd'; // antd는 ant design으로 중국 디자인 사이트\n// Row Col은 반응형 디자인을 만들기 위해 antd에서 지원\n\nimport 'antd/dist/antd.css';\nimport UserProfile from '../components/UserProfile';\nimport LoginForm from '../components/LoginForm';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux'; // react-redux 리액트와 리덕스를 연결해준다.\n\nimport Router from 'next/router';\nimport { createGlobalStyle } from 'styled-components';\nimport useInput from '../hooks/useInput';\nconst Global = createGlobalStyle`\n    .ant-row{\n        margin-right:0!important;\n        margin-left:0!important;\n    }\n    .ant-cool:first-child{\n        padding-left:0!important;\n    }\n    .ant-col:last-child{\n        padding-right:0!important;\n    }\n`;\nconst SearchInput = styled(Input.Search).withConfig({\n  displayName: \"AppLayout__SearchInput\",\n  componentId: \"sc-1x6xxdo-0\"\n})([\"verticalAlign:'middle';\"]); // 컴포넌트에 스타일을 적용하고 싶을때 style{}를 사용하는것보다\n// styled-components를 사용하는것이 좋다.\n\nconst AppLayout = ({\n  children\n}) => {\n  const {\n    searchInput,\n    onChangeSearchInput\n  } = useInput();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const onSearch = useCallback(() => {\n    Router.push(`/hashtag/${searchInput}`);\n  }, [searchInput]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      mode: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uB178\\uB4DC\\uBC84\\uB4DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/profile\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uD504\\uB85C\\uD544\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(SearchInput, {\n          enterButton: true,\n          value: searchInput,\n          onChange: onChangeSearchInput,\n          onSearch: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 8,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 6,\n        children: me ? /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 12,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/ljwoon94/react-nodebird\",\n          target: \"_blank\",\n          rel: \"noreferrer noopener\",\n          children: \"Made by JeongWoon Lee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\nAppLayout.propTypes = {\n  children: PropTypes.node.isRequired // node는 리턴 안에 들어가는 모든 것이다. 화면에 그릴 수 있는 모든것\n  // prop 검증\n\n}; // propTypes를 사용하려면 npm i prop-tyoes를 터미널 입력 설치 해야한다.\n// prop검증 기능이 있다. 부모에서 자식에게 물려주는 값을 검증한다.\n\nexport default AppLayout; // AppLayout 말고 다른 레이아웃을 적용하고 싶으면\n// OtherLayout을 components에 만들어서 해보장","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/components/AppLayout.js"],"names":["React","useCallback","useState","PropTypes","Link","Menu","Input","Row","Col","UserProfile","LoginForm","styled","useSelector","Router","createGlobalStyle","useInput","Global","SearchInput","Search","AppLayout","children","searchInput","onChangeSearchInput","me","state","user","onSearch","push","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link';\r\n//next에서 제공하는 Link 컴포넌트\r\nimport { Menu, Input, Row, Col } from 'antd';\r\n// antd는 ant design으로 중국 디자인 사이트\r\n// Row Col은 반응형 디자인을 만들기 위해 antd에서 지원\r\nimport 'antd/dist/antd.css'\r\nimport UserProfile from '../components/UserProfile';\r\nimport LoginForm from '../components/LoginForm';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\n// react-redux 리액트와 리덕스를 연결해준다.\r\nimport Router from 'next/router';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport useInput from '../hooks/useInput';\r\n\r\n\r\nconst Global = createGlobalStyle`\r\n    .ant-row{\r\n        margin-right:0!important;\r\n        margin-left:0!important;\r\n    }\r\n    .ant-cool:first-child{\r\n        padding-left:0!important;\r\n    }\r\n    .ant-col:last-child{\r\n        padding-right:0!important;\r\n    }\r\n`;\r\nconst SearchInput = styled(Input.Search)`\r\n    verticalAlign: 'middle';\r\n`;\r\n// 컴포넌트에 스타일을 적용하고 싶을때 style{}를 사용하는것보다\r\n// styled-components를 사용하는것이 좋다.\r\n\r\nconst AppLayout = ({ children }) => {\r\n    const {searchInput, onChangeSearchInput} = useInput();\r\n    const { me } = useSelector((state) => state.user);\r\n    \r\n    const onSearch = useCallback(()=>{\r\n        Router.push(`/hashtag/${searchInput}`);\r\n    }, [searchInput])\r\n    \r\n     return (\r\n        <div>\r\n            <Global />\r\n            <Menu mode=\"horizontal\">\r\n                <Menu.Item>\r\n                    <Link href=\"/\"><a>노드버드</a></Link>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Link href=\"/profile\"><a>프로필</a></Link>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <SearchInput\r\n                        enterButton\r\n                        value={searchInput}\r\n                        onChange={onChangeSearchInput}\r\n                        onSearch={onSearch}\r\n                    />\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Link href=\"/signup\"><a>회원가입</a></Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n            <Row gutter={8}>\r\n                {/* gutter 컬럼사이에 간격을 주는것 */}\r\n                <Col xs={24} md={6}>\r\n                    {me ? <UserProfile /> : <LoginForm />}\r\n                </Col>\r\n\r\n                <Col xs={24} md={12}>\r\n                    {children}\r\n                    {/* {children은 AppLayout 태그 안에 있는 자식 태그이다.} */}\r\n                </Col>\r\n                <Col xs={24} md={6} >\r\n                    <a href=\"https://github.com/ljwoon94/react-nodebird\" target=\"_blank\" rel=\"noreferrer noopener\">Made by JeongWoon Lee</a>\r\n                </Col>\r\n                {/* Col은 컬럼이다. xs는 태블릿기준 컬럼의 가로 길이 가로 길이는 최대 24이다.\r\n                    Col 여러 개를 한줄에 넣고 싶으면 각 Col xs가 합쳐서 24가 넘어선 안된다.\r\n                    테블릿 sm 모바일은 xs 모니터는 md 대화면은 lg\r\n\r\n                    target=\"_blank\" 을 사용할 땐\r\n                    rel=\"noreferrer noopener\" 도 같이 적자. 보안관련된 내용.\r\n                */}\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nAppLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    // node는 리턴 안에 들어가는 모든 것이다. 화면에 그릴 수 있는 모든것\r\n    // prop 검증\r\n};\r\n// propTypes를 사용하려면 npm i prop-tyoes를 터미널 입력 설치 해야한다.\r\n// prop검증 기능이 있다. 부모에서 자식에게 물려주는 값을 검증한다.\r\nexport default AppLayout;\r\n\r\n// AppLayout 말고 다른 레이아웃을 적용하고 싶으면\r\n// OtherLayout을 components에 만들어서 해보장"]},"metadata":{},"sourceType":"module"}