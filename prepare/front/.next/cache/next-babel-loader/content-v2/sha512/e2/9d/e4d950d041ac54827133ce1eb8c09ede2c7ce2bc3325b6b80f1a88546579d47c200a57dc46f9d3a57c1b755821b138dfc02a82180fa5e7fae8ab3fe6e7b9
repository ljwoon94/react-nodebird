{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\job\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\AppLayout.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link'; //next에서 제공하는 Link 컴포넌트\n\nimport { Menu, Input, Row, Col } from 'antd'; // antd는 ant design으로 중국 디자인 사이트\n// Row Col은 반응형 디자인을 만들기 위해 antd에서 지원\n\nimport 'antd/dist/antd.css';\nimport UserProfile from '../components/UserProfile';\nimport LoginForm from '../components/LoginForm';\n\nvar AppLayout = function AppLayout(_ref) {\n  _s();\n\n  var children = _ref.children;\n  cosnt[(isLoggedIn, setIsLoggedIn)] = useState(false); // 서버가 아직 구현되지 않아 만든 임시 데이터\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      mode: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uB178\\uB4DC\\uBC84\\uB4DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 36\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/profile\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uD504\\uB85C\\uD544\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 43\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Input.Search, {\n          enterButton: true,\n          style: {\n            verticalAlign: 'middle'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 42\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 8,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 6,\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 35\n        }, _this) : /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 53\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 12,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/ljwoon94/react-nodebird\",\n          target: \"_blank\",\n          rel: \"noreferrer noopener\",\n          children: \"Made by JeongWoon Lee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AppLayout, \"Hdw5EO+DplCNBEJcNuH8tsP7WZ4=\");\n\n_c = AppLayout;\nAppLayout.propTypes = {\n  children: PropTypes.node.isRequired // node는 리턴 안에 들어가는 모든 것이다. 화면에 그릴 수 있는 모든것\n  // prop 검증\n\n}; // propTypes를 사용하려면 npm i prop-tyoes를 터미널 입력 설치 해야한다.\n// prop검증 기능이 있다. 부모에서 자식에게 물려주는 값을 검증한다.\n\nexport default AppLayout; // AppLayout 말고 다른 레이아웃을 적용하고 싶으면\n// OtherLayout을 components에 만들어서 해보장\n\nvar _c;\n\n$RefreshReg$(_c, \"AppLayout\");","map":{"version":3,"sources":["C:/job/react-nodebird/prepare/front/components/AppLayout.js"],"names":["React","PropTypes","Link","Menu","Input","Row","Col","UserProfile","LoginForm","AppLayout","children","cosnt","isLoggedIn","setIsLoggedIn","useState","verticalAlign","propTypes","node","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAsC,MAAtC,C,CACA;AACA;;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAChCC,EAAAA,KAAK,EAACC,UAAU,EAAEC,aAAb,EAAL,GAAmCC,QAAQ,CAAC,KAAD,CAA3C,CADgC,CAEhC;;AACA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAA,8BACI,QAAC,IAAD,CAAM,IAAN;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,GAAX;AAAA,iCAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,UAAX;AAAA,iCAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAJJ,eAOI,QAAC,IAAD,CAAM,IAAN;AAAA,+BACI,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAA0B,UAAA,KAAK,EAAE;AAAEC,YAAAA,aAAa,EAAE;AAAjB;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAPJ,eAUI,QAAC,IAAD,CAAM,IAAN;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAA,iCAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAeI,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAb;AAAA,8BAEI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAA,kBACKH,UAAU,gBAAG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,iBAAH,gBAAqB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADpC;AAAA;AAAA;AAAA;AAAA,eAFJ,eAMI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAA,kBACKF;AADL;AAAA;AAAA;AAAA;AAAA,eANJ,eAUI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAA,+BACI;AAAG,UAAA,IAAI,EAAC,4CAAR;AAAqD,UAAA,MAAM,EAAC,QAA5D;AAAqE,UAAA,GAAG,EAAC,qBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAuCH,CA1CD;;GAAMD,S;;KAAAA,S;AA4CNA,SAAS,CAACO,SAAV,GAAsB;AAClBN,EAAAA,QAAQ,EAAET,SAAS,CAACgB,IAAV,CAAeC,UADP,CAElB;AACA;;AAHkB,CAAtB,C,CAKA;AACA;;AACA,eAAeT,SAAf,C,CAEA;AACA","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link';\r\n//next에서 제공하는 Link 컴포넌트\r\nimport { Menu, Input, Row, Col } from 'antd';\r\n// antd는 ant design으로 중국 디자인 사이트\r\n// Row Col은 반응형 디자인을 만들기 위해 antd에서 지원\r\nimport 'antd/dist/antd.css'\r\nimport UserProfile from '../components/UserProfile';\r\nimport LoginForm from '../components/LoginForm';\r\n\r\n\r\nconst AppLayout = ({ children }) => {\r\n    cosnt[isLoggedIn, setIsLoggedIn] = useState(false);\r\n    // 서버가 아직 구현되지 않아 만든 임시 데이터\r\n    return (\r\n        <div>\r\n            <Menu mode=\"horizontal\">\r\n                <Menu.Item>\r\n                    <Link href=\"/\"><a>노드버드</a></Link>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Link href=\"/profile\"><a>프로필</a></Link>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Input.Search enterButton style={{ verticalAlign: 'middle' }} />\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Link href=\"/signup\"><a>회원가입</a></Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n            <Row gutter={8}>\r\n                {/* gutter 컬럼사이에 간격을 주는것 */}\r\n                <Col xs={24} md={6}>\r\n                    {isLoggedIn ? <UserProfile /> : <LoginForm />}\r\n                </Col>\r\n\r\n                <Col xs={24} md={12}>\r\n                    {children}\r\n                    {/* {children은 AppLayout 태그 안에 있는 자식 태그이다.} */}\r\n                </Col>\r\n                <Col xs={24} md={6} >\r\n                    <a href=\"https://github.com/ljwoon94/react-nodebird\" target=\"_blank\" rel=\"noreferrer noopener\">Made by JeongWoon Lee</a>\r\n                </Col>\r\n                {/* Col은 컬럼이다. xs는 태블릿기준 컬럼의 가로 길이 가로 길이는 최대 24이다.\r\n                    Col 여러 개를 한줄에 넣고 싶으면 각 Col xs가 합쳐서 24가 넘어선 안된다.\r\n                    테블릿 sm 모바일은 xs 모니터는 md 대화면은 lg\r\n\r\n                    target=\"_blank\" 을 사용할 땐\r\n                    rel=\"noreferrer noopener\" 도 같이 적자. 보안관련된 내용.\r\n                */}\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nAppLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    // node는 리턴 안에 들어가는 모든 것이다. 화면에 그릴 수 있는 모든것\r\n    // prop 검증\r\n};\r\n// propTypes를 사용하려면 npm i prop-tyoes를 터미널 입력 설치 해야한다.\r\n// prop검증 기능이 있다. 부모에서 자식에게 물려주는 값을 검증한다.\r\nexport default AppLayout;\r\n\r\n// AppLayout 말고 다른 레이아웃을 적용하고 싶으면\r\n// OtherLayout을 components에 만들어서 해보장"]},"metadata":{},"sourceType":"module"}